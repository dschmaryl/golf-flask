{"version":3,"sources":["reducers/index.ts","reducers/auth.ts","reducers/rounds.js","reducers/stats.ts","reducers/token.ts","store.tsx","utils/httpFunctions.ts","actions/auth.ts","screens/Login.tsx","components/PaddedDiv.ts","screens/Main/Rounds/RoundsHeader.tsx","screens/Main/Rounds/SelectedRound/SelectedRoundData.tsx","screens/Main/Rounds/SelectedRound/index.tsx","screens/Main/Rounds/RoundsList.tsx","actions/rounds.ts","screens/Main/Rounds/index.tsx","screens/Main/Stats/StatsHeader.tsx","screens/Main/Stats/StatsList.tsx","screens/Main/Stats/index.tsx","actions/stats.ts","screens/Main/index.tsx","App.tsx","index.tsx"],"names":["rootReducer","combineReducers","auth","state","arguments","length","undefined","isAuthenticated","authenticationFailed","statusText","action","type","concat","error","rounds","roundsLoaded","sortKey","reverseSort","selectedRoundIndex","data","Object","objectSpread","defineProperty","roundIndex","roundData","stats","statsLoaded","selectedSeason","season","token","store","createStore","persistReducer","key","storage","whitelist","applyMiddleware","thunk","persistor","persistStore","getData","url","axios","get","headers","Authorization","tokenConfig","checkToken","dispatch","getState","post","validateToken","then","response","catch","login","username","password","getToken","LoginContainer","styled","div","_templateObject","Header","_templateObject2","InputRow","_templateObject3","LoginComponent","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleKeyPress","event","keyCode","props","render","react_default","a","createElement","onKeyPress","name","className","value","placeholder","onChange","setState","target","onClick","inherits","React","Component","Login","connect","PaddedDiv","PaddedDiv_templateObject","ItemLeft","RoundsHeader_templateObject","ItemRight","RoundsHeader_templateObject2","renderItem","RoundsHeader","_ref","style","cursor","ThLeft","th","SelectedRoundData_templateObject","TdLeft","td","SelectedRoundData_templateObject2","ThRight","SelectedRoundData_templateObject3","TdRight","_templateObject4","nineHoleArray","func","from","v","i","SelectedRoundData","nineHoleTotal","startHole","stat","_","reduce","total","hole","renderHoles","holeNumber","holeStat","renderTableRow","label","width","SelectedDiv","SelectedRound_templateObject","TextRight","SelectedRound_templateObject2","roundDataKeys","SelectedRound","map","dist_default","format","renderRowItem","SelectedRoundData_SelectedRoundData","RoundsList_templateObject","RoundsList","selectRound","id","console","log","keys","k","parseInt","filter","date","split","sort","b","moment","diff","round","SelectedRound_SelectedRound","RoundsList_ItemRight","Rounds","setSortKey","RoundsHeader_RoundsHeader","SeasonTh","StatsHeader_templateObject","StatsHeader","seasons","SeasonTd","StatsList_templateObject","statKeys","strokes","putts","gir","handicap","par3","par4","par5","StatsList","Stats","selectSeason","s","reverse","StatsHeader_StatsHeader","StatsList_StatsList","ContainerDiv","Main_templateObject","Main_templateObject2","MainComponent","componentDidMount","addStats","addRounds","Main_Header","Main","App","ReactDOM","children","react_redux_es","integration_react","loading","document","getElementById"],"mappings":"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","file":"static/js/main.78fde747.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nimport { auth } from './auth';\nimport { rounds } from './rounds';\nimport { stats } from './stats';\nimport { token } from './token';\n\nexport const rootReducer = combineReducers({\n  auth,\n  rounds,\n  stats,\n  token\n});\n","import { Reducer } from 'redux';\n\nimport { AuthStateType, AuthActionTypes } from '../types/auth';\n\nexport const auth: Reducer = (\n  state: AuthStateType = {\n    isAuthenticated: false,\n    authenticationFailed: false,\n    statusText: 'Please log in'\n  },\n  action: AuthActionTypes\n) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        isAuthenticated: true,\n        authenticationFailed: false,\n        statusText: 'You are logged in'\n      };\n\n    case 'LOGIN_FAILURE':\n      return {\n        isAuthenticated: false,\n        authenticationFailed: true,\n        statusText: `Error logging in: ${action.error}`\n      };\n\n    case 'LOGOUT':\n      return {\n        isAuthenticated: false,\n        authenticationFailed: false,\n        statusText: 'Please log in'\n      };\n\n    default:\n      return state;\n  }\n};\n","export const rounds = (\n  state = {\n    roundsLoaded: false,\n    sortKey: 'date',\n    reverseSort: true,\n    selectedRoundIndex: null,\n    data: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_ROUNDS':\n      return { ...state, roundsLoaded: true, data: { ...action.data } };\n\n    case 'ADD_ROUND_DATA':\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.roundIndex]: {\n            ...state.data[action.roundIndex],\n            roundData: { ...action.roundData }\n          }\n        }\n      };\n\n    case 'SELECT_ROUND':\n      if (action.data) {\n        return {\n          ...state,\n          selectedRoundIndex: action.roundIndex,\n          data: {\n            ...state.data,\n            [action.roundIndex]: {\n              ...state.data[action.roundIndex],\n              roundData: { ...action.data }\n            }\n          }\n        };\n      } else {\n        return { ...state, selectedRoundIndex: action.roundIndex };\n      }\n\n    case 'SET_SORT_KEY':\n      if (action.sortKey === state.sortKey) {\n        return { ...state, reverseSort: !state.reverseSort };\n      } else {\n        if (action.sortKey === 'date' || action.sortKey === 'total_gir') {\n          return { ...state, reverseSort: true, sortKey: action.sortKey };\n        } else {\n          return { ...state, reverseSort: false, sortKey: action.sortKey };\n        }\n      }\n\n    case 'TOGGLE_SORT_ORDER':\n      return { ...state, reverseSort: !state.reverseSort };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { StatsStateType } from '../types/stats';\n\nexport const stats: Reducer = (\n  state: StatsStateType = {\n    statsLoaded: false,\n    selectedSeason: 2046,\n    data: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_STATS':\n      return { ...state, statsLoaded: true, data: { ...action.data } };\n\n    case 'SELECT_SEASON':\n      return {\n        ...state,\n        selectedSeason: action.season\n      };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { TokenStateType, TokenActionTypes } from '../types/auth';\n\nexport const token: Reducer = (\n  state: TokenStateType = null,\n  action: TokenActionTypes\n) => {\n  switch (action.type) {\n    case 'SET_TOKEN':\n      return action.token;\n\n    case 'CLEAR_TOKEN':\n      return null;\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { rootReducer } from './reducers';\n\nconst store = createStore(\n  persistReducer(\n    { key: 'golf-stats', storage, whitelist: ['token'] },\n    rootReducer\n  ),\n  applyMiddleware(thunk)\n);\n\nconst persistor = persistStore(store);\n\nexport const ReduxProvider = ({ children }: { children: any }) => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      {children}\n    </PersistGate>\n  </Provider>\n);\n","import axios from 'axios';\n\nimport { Token } from '../types/auth';\n\nconst tokenConfig = (token: Token) => ({\n  headers: {\n    'Authorization': token // prettier-ignore\n  }\n});\n\nexport const getToken = (username: string, password: string) =>\n  axios.post('/api/get_token', { username, password });\n\nexport const validateToken = (token: Token) =>\n  axios.post('/api/is_token_valid', { token });\n\nexport const getData = (url: string, token: Token) =>\n  axios.get(url, tokenConfig(token));\n","import { AnyAction } from 'redux';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getToken, validateToken } from '../utils/httpFunctions';\n\nexport const checkToken = (): ThunkAction<\n  void,\n  AppStateType,\n  null,\n  AnyAction\n> => (dispatch, getState) => {\n  const token = getState().token;\n  validateToken(token)\n    .then(response => response.data)\n    .then(response => {\n      if (response) {\n        return dispatch({\n          type: 'LOGIN_SUCCESS'\n        });\n      } else {\n        dispatch({ type: 'CLEAR_TOKEN' });\n        return dispatch({\n          type: 'LOGIN_FAILURE',\n          error: 'Invalid token'\n        });\n      }\n    })\n    .catch(() =>\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        error: 'Invalid token'\n      })\n    );\n};\n\nexport const login = (\n  username: string,\n  password: string\n): ThunkAction<void, AppStateType, null, AnyAction> => dispatch =>\n  getToken(username, password)\n    .then(response => response.data)\n    .then(response => {\n      dispatch({ type: 'SET_TOKEN', token: response.token });\n      return dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    })\n    .catch(() => {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        error: 'Invalid username or password'\n      });\n    });\n\nexport const logout = (): ThunkAction<void, AppStateType, null, AnyAction> => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\n) => {\n  dispatch({ type: 'CLEAR_TOKEN' });\n  return { type: 'LOGOUT' };\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport { login } from '../actions/auth';\nimport { AppStateType } from '../types';\n\nconst LoginContainer = styled.div`\n  min-width: 320px;\n  max-width: 420px;\n  padding: 10% 0 0 20%;\n`;\n\nconst Header = styled.div`\n  font-size: 3em;\n`;\n\nconst InputRow = styled.div`\n  margin: 20px 0 20px 0;\n`;\n\ninterface PropTypes {\n  statusText: string;\n  login: Function;\n}\n\nexport class LoginComponent extends React.Component<PropTypes> {\n  state = { username: '', password: '' };\n\n  handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) this.login();\n  };\n\n  login = () => {\n    // event.preventDefault();\n    this.props.login(this.state.username, this.state.password);\n  };\n\n  render = () => (\n    <LoginContainer onKeyPress={this.handleKeyPress}>\n      <Header>\n        <div>welcome</div>\n      </Header>\n      <div>\n        <h5>{this.props.statusText}</h5>\n      </div>\n      <InputRow>\n        <input\n          name=\"username\"\n          type=\"text\"\n          className=\"form-control text-input\"\n          value={this.state.username}\n          placeholder=\"name\"\n          onChange={event => this.setState({ username: event.target.value })}\n        />\n      </InputRow>\n      <InputRow>\n        <input\n          name=\"password\"\n          type=\"password\"\n          className=\"form-control text-input\"\n          value={this.state.password}\n          placeholder=\"password\"\n          onChange={event => this.setState({ password: event.target.value })}\n        />\n      </InputRow>\n\n      <InputRow>\n        <input\n          type=\"submit\"\n          value=\"login\"\n          className=\"btn btn-default\"\n          onClick={this.login}\n        />\n        <input\n          type=\"submit\"\n          value=\"register\"\n          className=\"btn btn-default\"\n          onClick={() => {}}\n        />\n      </InputRow>\n    </LoginContainer>\n  );\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  statusText: state.auth.statusText\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  login: (username: string, password: string) =>\n    dispatch(login(username, password))\n});\n\nexport const Login = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginComponent);\n","import styled from 'styled-components';\n\nexport const PaddedDiv = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ItemLeft = styled.div`\n  font-weight: bold;\n`;\n\nconst ItemRight = styled.div`\n  font-weight: bold;\n  text-align: right;\n`;\n\nconst renderItem = (value: string, key: string, onClick: Function) =>\n  value === 'date' || value === 'course' ? (\n    <ItemLeft className=\"col-xs-3\" onClick={() => onClick(key)}>\n      {value}\n    </ItemLeft>\n  ) : (\n    <ItemRight className=\"col-xs-1\" onClick={() => onClick(key)}>\n      {value}\n    </ItemRight>\n  );\n\nexport const RoundsHeader: React.FC<{ onClick: Function }> = ({ onClick }) => (\n  <div className=\"row\" style={{ cursor: 'pointer' }}>\n    {renderItem('date', 'date', onClick)}\n    {renderItem('course', 'course', onClick)}\n    {renderItem('score', 'total_strokes', onClick)}\n    {renderItem('front', 'front_9_strokes', onClick)}\n    {renderItem('back', 'back_9_strokes', onClick)}\n    {renderItem('putts', 'total_putts', onClick)}\n    {renderItem('girs', 'total_gir', onClick)}\n    {renderItem('hdcp', 'handicap_index', onClick)}\n  </div>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { RoundData } from '../../../../types/rounds';\n\nconst ThLeft = styled.th`\n  text-align: left;\n`;\nconst TdLeft = styled.td`\n  text-align: left;\n`;\nconst ThRight = styled.th`\n  text-align: right;\n`;\nconst TdRight = styled.td`\n  text-align: right;\n  max-width: 28px;\n`;\n\nconst nineHoleArray = (func: Function) =>\n  Array.from({ length: 9 }, (v, i) => func(v, i));\n\ninterface PropTypes {\n  roundData: RoundData;\n}\n\nexport const SelectedRoundData: React.FC<PropTypes> = ({ roundData }) => {\n  const nineHoleTotal = (startHole: number, stat: string) =>\n    nineHoleArray(\n      (_: any, i: number) => roundData['holes'][i + startHole][stat]\n    ).reduce((total: number, hole: number) => total + hole);\n\n  roundData['front_9_par'] = nineHoleTotal(1, 'par');\n  roundData['back_9_par'] = nineHoleTotal(10, 'par');\n  roundData['total_par'] = roundData['front_9_par'] + roundData['back_9_par'];\n\n  const holeStat = (holeNumber: number, stat: string) =>\n    stat === 'gir'\n      ? roundData['holes'][holeNumber]['gir']\n        ? '*'\n        : ''\n      : roundData['holes'][holeNumber][stat];\n\n  const renderHoles = (startHole: number, stat: string) =>\n    nineHoleArray((_: any, i: number) => (\n      <TdRight key={stat + '_' + (i + startHole)}>\n        {holeStat(i + startHole, stat)}\n      </TdRight>\n    ));\n\n  const renderTableRow = (label: string, stat: string) => (\n    <tr>\n      <TdLeft>{label}:</TdLeft>\n      {renderHoles(1, stat)}\n      <TdRight>{roundData['front_9_' + stat]}</TdRight>\n      {renderHoles(10, stat)}\n      <TdRight>{roundData['back_9_' + stat]}</TdRight>\n      <TdRight>{roundData['total_' + stat]}</TdRight>\n    </tr>\n  );\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-xs-12\">\n        <table className=\"table\" style={{ width: '100%' }}>\n          <thead>\n            <tr>\n              <ThLeft>hole:</ThLeft>\n              {nineHoleArray((_: any, i: number) => (\n                <ThRight key={'hole_' + (i + 1)}>{i + 1}</ThRight>\n              ))}\n              <ThRight>front</ThRight>\n              {nineHoleArray((_: any, i: number) => (\n                <ThRight key={'hole_' + (i + 10)}>{i + 10}</ThRight>\n              ))}\n              <ThRight>back</ThRight>\n              <ThRight>total</ThRight>\n            </tr>\n          </thead>\n          <tbody>\n            {renderTableRow('par', 'par')}\n            {renderTableRow('score', 'strokes')}\n            {renderTableRow('putts', 'putts')}\n            {renderTableRow('gir', 'gir')}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Moment from 'react-moment';\n\nimport { RoundData } from '../../../../types/rounds';\n\nimport { SelectedRoundData } from './SelectedRoundData';\n\nconst SelectedDiv = styled.div`\n  background-color: #f1f5f1;\n`;\n\nconst TextRight = styled.div`\n  text-align: right;\n`;\n\nconst roundDataKeys = [\n  'date',\n  'course',\n  'total_strokes',\n  'front_9_strokes',\n  'back_9_strokes',\n  'total_putts',\n  'total_gir',\n  'handicap_index'\n];\n\ninterface PropTypes {\n  roundData: RoundData;\n  onClick: Function;\n}\n\nexport const SelectedRound: React.FC<PropTypes> = ({ roundData, onClick }) => {\n  const renderRowItem = (key: string) =>\n    key === 'date' ? (\n      <SelectedDiv className=\"col-xs-3\" key={key}>\n        <Moment format=\"YYYY-MM-DD\">{roundData['date']}</Moment>\n      </SelectedDiv>\n    ) : key === 'course' ? (\n      <SelectedDiv className=\"col-xs-3\" key={key}>\n        {roundData['course']}\n      </SelectedDiv>\n    ) : (\n      <SelectedDiv className=\"col-xs-1\" key={key}>\n        <TextRight>{roundData[key]}</TextRight>\n      </SelectedDiv>\n    );\n\n  return (\n    <div onClick={() => onClick()} style={{ cursor: 'pointer' }}>\n      <div className=\"row selected-round-row\">\n        {roundDataKeys.map(key => renderRowItem(key))}\n      </div>\n      <SelectedRoundData roundData={roundData} />\n    </div>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { selectRound } from '../../../actions/rounds';\n\nimport { AppStateType } from '../../../types';\nimport { RoundsType } from '../../../types/rounds';\n\nimport { SelectedRound } from './SelectedRound';\n\nconst ItemRight = styled.div`\n  text-align: right;\n`;\n\ninterface PropTypes {\n  rounds: RoundsType;\n  sortKey: string;\n  reverseSort: boolean;\n  selectedSeason: number;\n  selectedRoundIndex: null | number;\n  selectRound: Function;\n}\n\nconst RoundsListComponent: React.FC<PropTypes> = props => (\n  <div>\n    {Object.keys(props.rounds)\n      .map(k => parseInt(k))\n      .filter(\n        key =>\n          props.selectedSeason === 2046 ||\n          props.rounds[key].date.split('-')[0] === '' + props.selectedSeason\n      )\n      .sort((a, b) => {\n        if (props.sortKey === 'date') {\n          return moment(props.rounds[props.reverseSort ? b : a]['date']).diff(\n            moment(props.rounds[props.reverseSort ? a : b]['date'])\n          );\n        } else {\n          const first = props.rounds[props.reverseSort ? b : a][props.sortKey];\n          const second = props.rounds[props.reverseSort ? a : b][props.sortKey];\n          return first > second ? 1 : -1;\n        }\n      })\n      .map(key => {\n        const round = props.rounds[key];\n\n        return key === props.selectedRoundIndex ? (\n          <SelectedRound\n            roundData={round.roundData}\n            onClick={() => props.selectRound(null)}\n            key={key}\n          />\n        ) : (\n          <div\n            className=\"row\"\n            onClick={() => props.selectRound(key)}\n            style={{ cursor: 'pointer' }}\n            key={key}\n          >\n            <div className=\"col-xs-3\">{round['date'].split(' ')[0]}</div>\n            <div className=\"col-xs-3\">{round['course']}</div>\n            <ItemRight className=\"col-xs-1\">{round['total_strokes']}</ItemRight>\n            <ItemRight className=\"col-xs-1\">\n              {round['front_9_strokes']}\n            </ItemRight>\n            <ItemRight className=\"col-xs-1\">\n              {round['back_9_strokes']}\n            </ItemRight>\n            <ItemRight className=\"col-xs-1\">{round['total_putts']}</ItemRight>\n            <ItemRight className=\"col-xs-1\">{round['total_gir']}</ItemRight>\n            <ItemRight className=\"col-xs-1\">\n              {round['handicap_index']}\n            </ItemRight>\n          </div>\n        );\n      })}\n  </div>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  rounds: state.rounds.data,\n  sortKey: state.rounds.sortKey,\n  reverseSort: state.rounds.reverseSort,\n  selectedSeason: state.stats.selectedSeason,\n  selectedRoundIndex: state.rounds.selectedRoundIndex\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  selectRound: (roundIndex: number) => dispatch(selectRound(roundIndex))\n});\n\nexport const RoundsList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoundsListComponent);\n","import { Action, ActionCreator, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getData } from '../utils/httpFunctions';\n\nexport const addRounds: ActionCreator<\n  ThunkAction<void, AppStateType, null, Action>\n> = () => (dispatch: Dispatch, getState) => {\n  getData('/api/user/rounds', getState().token)\n    .then(response => response.data)\n    .then(data => dispatch({ type: 'ADD_ROUNDS', data }))\n    .catch(() => console.log('failed to get rounds'));\n};\n\nexport const addRoundData: ActionCreator<\n  ThunkAction<void, AppStateType, null, Action>\n> = (roundId: number) => (dispatch: Dispatch, getState) => {\n  getData('/api/round/' + roundId, getState().token)\n    .then(response => response.data)\n    .then(data => dispatch({ type: 'ADD_ROUND_data', roundId, data }))\n    .catch(() => console.log('failed to get rounds'));\n};\n\nexport const selectRound: ActionCreator<\n  ThunkAction<void, AppStateType, null, Action>\n> = (roundIndex: number) => (dispatch: Dispatch, getState) => {\n  if (roundIndex === null) {\n    dispatch({ type: 'SELECT_ROUND', roundIndex });\n  } else {\n    const rounds = getState().rounds;\n    if (rounds.data[roundIndex].roundData) {\n      dispatch({ type: 'SELECT_ROUND', roundIndex });\n    } else {\n      getData('/api/round/' + rounds.data[roundIndex].id, getState().token)\n        .then(response => response.data)\n        .then(data => dispatch({ type: 'SELECT_ROUND', roundIndex, data }))\n        .catch(() => console.log('failed to get round data'));\n    }\n  }\n};\n\nexport const setSortKey: ActionCreator<Action> = (sortKey: string) => ({\n  type: 'SET_SORT_KEY',\n  sortKey\n});\n\nexport const toggleSortOrder: ActionCreator<Action> = () => ({\n  type: 'TOGGLE_SORT_ORDER'\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { setSortKey } from '../../../actions/rounds';\n\nimport { AppStateType } from '../../../types';\n\nimport { PaddedDiv } from '../../../components/PaddedDiv';\n\nimport { RoundsHeader } from './RoundsHeader';\nimport { RoundsList } from './RoundsList';\n\ninterface PropTypes {\n  roundsLoaded: boolean;\n  setSortKey: Function;\n}\n\nexport const RoundsComponent: React.FC<PropTypes> = ({\n  roundsLoaded,\n  setSortKey\n}) => (\n  <PaddedDiv className=\"row\">\n    {!roundsLoaded ? (\n      <p>loading rounds...</p>\n    ) : (\n      <div className=\"col-xs-12\">\n        <RoundsHeader onClick={setSortKey} />\n        <RoundsList />\n      </div>\n    )}\n  </PaddedDiv>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  roundsLoaded: state.rounds.roundsLoaded\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  setSortKey: (key: string) => dispatch(setSortKey(key))\n});\n\nexport const Rounds = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoundsComponent);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SeasonTh = styled.th`\n  cursor: pointer;\n  text-align: right;\n`;\n\ninterface PropTypes {\n  seasons: Array<number>;\n  onClick: Function;\n}\n\nexport const StatsHeader: React.FC<PropTypes> = ({ seasons, onClick }) => (\n  <thead>\n    <tr>\n      <th>season:</th>\n      {seasons.map(season => (\n        <SeasonTh key={season} onClick={() => onClick(season)}>\n          {season === 2046 ? 'overall' : season}\n        </SeasonTh>\n      ))}\n    </tr>\n  </thead>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { StatsType } from '../../../types/stats';\n\nconst SeasonTd = styled.td`\n  cursor: pointer;\n  text-align: right;\n`;\n\ntype StatKeysType = { [stat: string]: string };\n\nconst statKeys: StatKeysType = {\n  strokes: 'scoring average',\n  putts: 'putts per round',\n  gir: 'greens per round',\n  handicap: 'handicap',\n  par3: 'par 3 average',\n  par4: 'par 4 average',\n  par5: 'par 5 average'\n};\n\ninterface PropTypes {\n  seasons: Array<number>;\n  stats: StatsType;\n  onClick: Function;\n}\n\nexport const StatsList: React.FC<PropTypes> = ({ seasons, stats, onClick }) => (\n  <tbody>\n    {Object.keys(statKeys).map(stat => (\n      <tr key={stat}>\n        <td>{statKeys[stat]}:</td>\n        {seasons.map(season => (\n          <SeasonTd onClick={() => onClick(season)} key={season + '-' + stat}>\n            {stats[season][stat]}\n          </SeasonTd>\n        ))}\n      </tr>\n    ))}\n  </tbody>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { selectSeason } from '../../../actions/stats';\n\nimport { AppStateType } from '../../../types';\nimport { StatsType } from '../../../types/stats';\n\nimport { PaddedDiv } from '../../../components/PaddedDiv';\n\nimport { StatsHeader } from './StatsHeader';\nimport { StatsList } from './StatsList';\n\ninterface PropTypes {\n  statsLoaded: boolean;\n  stats: StatsType;\n  selectSeason: Function;\n}\n\nexport const StatsComponent: React.FC<PropTypes> = ({\n  statsLoaded,\n  stats,\n  selectSeason\n}) => {\n  if (!statsLoaded) {\n    return <p>loading stats...</p>;\n  } else {\n    const seasons = Object.keys(stats)\n      .map(s => parseInt(s))\n      .sort()\n      .reverse();\n\n    return (\n      <PaddedDiv className=\"row\">\n        <div className=\"col-xs-12\">\n          <table style={{ width: '100%' }}>\n            <StatsHeader seasons={seasons} onClick={selectSeason} />\n            <StatsList seasons={seasons} stats={stats} onClick={selectSeason} />\n          </table>\n        </div>\n      </PaddedDiv>\n    );\n  }\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  statsLoaded: state.stats.statsLoaded,\n  stats: state.stats.data\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  selectSeason: (season: number) => dispatch(selectSeason(season))\n});\n\nexport const Stats = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StatsComponent);\n","import { Action, ActionCreator, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getData } from '../utils/httpFunctions';\n\nexport const addStats: ActionCreator<\n  ThunkAction<void, AppStateType, null, Action>\n> = () => (dispatch: Dispatch, getState) => {\n  getData('/api/user/stats', getState().token)\n    .then(response => response.data)\n    .then(data => dispatch({ type: 'ADD_STATS', data }))\n    .catch(() => console.log('failed to get stats'));\n};\n\nexport const selectSeason: ActionCreator<Action> = (season: string) => ({\n  type: 'SELECT_SEASON',\n  season\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { addRounds } from '../../actions/rounds';\nimport { addStats } from '../../actions/stats';\n\nimport { AppStateType } from '../../types';\nimport { StatsType } from '../../types/stats';\nimport { RoundsType } from '../../types/rounds';\n\nimport { Rounds } from './Rounds';\nimport { Stats } from './Stats';\n\nconst ContainerDiv = styled.div`\n  max-width: 720px;\n  min-width: 480px;\n  margin: auto;\n`;\n\nconst Header = styled.div`\n  text-align: center;\n`;\n\ninterface PropTypes {\n  stats: StatsType;\n  rounds: RoundsType;\n  addStats: Function;\n  addRounds: Function;\n}\n\nclass MainComponent extends React.Component<PropTypes> {\n  componentDidMount = () => {\n    if (!this.props.stats[2046]) {\n      console.log('getting stats');\n      this.props.addStats();\n    }\n    if (!this.props.rounds[0]) {\n      console.log('getting rounds');\n      this.props.addRounds();\n    }\n  };\n\n  render = () => (\n    <ContainerDiv className=\"container\">\n      <Header className=\"row\">\n        <div className=\"col-xs-12\">\n          <h3>all statistics</h3>\n        </div>\n      </Header>\n      <Stats />\n      <Rounds />\n    </ContainerDiv>\n  );\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  rounds: state.rounds.data,\n  stats: state.stats.data\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  addRounds: () => dispatch(addRounds()),\n  addStats: () => dispatch(addStats())\n});\n\nexport const Main = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { checkToken } from './actions/auth';\n\nimport { AppStateType } from './types';\nimport { Token } from './types/auth';\n\nimport { Login } from './screens/Login';\nimport { Main } from './screens/Main';\n\ntype PropTypes = {\n  token: Token;\n  isAuthenticated: boolean;\n  authenticationFailed: boolean;\n  checkToken: Function;\n};\n\nconst AppComponent: React.FC<PropTypes> = ({\n  token,\n  isAuthenticated,\n  authenticationFailed,\n  checkToken\n}) => {\n  if (token && isAuthenticated) {\n    return <Main />;\n  } else if (!token || authenticationFailed) {\n    return <Login />;\n  } else {\n    checkToken();\n    return (\n      <div>\n        <p>authenticating...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  token: state.token,\n  isAuthenticated: state.auth.isAuthenticated,\n  authenticationFailed: state.auth.authenticationFailed\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  checkToken: () => dispatch(checkToken())\n});\n\nexport const App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppComponent);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ReduxProvider } from './store';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <ReduxProvider>\n    <App />\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}