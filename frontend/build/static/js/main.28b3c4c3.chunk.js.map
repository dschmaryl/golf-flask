{"version":3,"sources":["store/index.tsx","store/auth/reducer.ts","store/rounds/reducer.ts","store/stats/reducer.ts","utils/httpFunctions.ts","store/auth/actions.ts","screens/Login.tsx","screens/Main/Rounds/styles.ts","screens/Main/Rounds/RoundsHeader.tsx","store/rounds/actions.ts","screens/Main/Rounds/RoundsList.tsx","screens/Main/Rounds/index.tsx","screens/Main/Stats/styles.ts","screens/Main/Stats/StatsHeader.tsx","screens/Main/Stats/StatsList.tsx","screens/Main/Stats/index.tsx","store/stats/actions.ts","screens/Main/SelectedRound/styles.ts","screens/Main/SelectedRound/SelectedRoundTable.tsx","screens/Main/SelectedRound/index.tsx","screens/Main/index.tsx","App.tsx","index.tsx"],"names":["rootReducer","combineReducers","auth","state","arguments","length","undefined","isAuthenticated","authenticationFailed","statusText","username","token","action","type","concat","error","rounds","roundsLoaded","sortKey","reverseSort","selectedRoundIndex","selectedRoundIsLoaded","showRoundDialog","data","Object","objectSpread","defineProperty","roundIndex","roundData","stats","statsLoaded","selectedSeason","season","store","createStore","persistReducer","key","storage","whitelist","applyMiddleware","thunk","persistor","persistStore","getData","url","axios","get","headers","Authorization","tokenConfig","checkToken","dispatch","getState","post","then","response","jwtDecode","catch","login","password","getToken","styles","loginContainer","width","margin","paddingTop","paddingRight","rowContainer","marginBottom","LoginComponent","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleKeyPress","event","keyCode","props","render","react_default","a","createElement","style","onKeyDown","TextField_default","label","value","placeholder","onChange","setState","target","autoComplete","Button_default","variant","marginTop","onClick","marginLeft","inherits","React","Component","Login","connect","roundsContainer","loadingDiv","padding","roundsTable","dateCell","minWidth","maxWidth","courseCell","paddingLeft","narrowCell","RoundsHeader","setSortKey","_ref","renderItem","TableCell_default","align","TableSortLabel_default","active","direction","TableHead_default","TableRow_default","Cell","text","RoundsList","id","console","log","_ref2","TableBody_default","keys","map","parseInt","filter","date","split","sort","b","moment","diff","round","cursor","hover","RoundsList_Cell","Rounds","Table_default","statsContainer","statsTable","seasonHeaderCell","headerCell","seasonCell","selectedSeasonCell","backgroundColor","selectedCell","regularCell","StatsHeader","seasons","stat","statKeys","StatsList","Stats","selectSeason","s","reverse","StatsHeader_StatsHeader","StatsList_StatsList","bigPadding","smallPadding","button","frontNine","backNine","CellLeft","SelectedRoundTable","hideRoundDialog","_ref3","reduce","sum","num","getStat","holeNum","renderHole","SelectedRoundTable_Cell","renderTableRow","SelectedRoundTable_CellLeft","SelectedRound","Dialog_default","open","onClose","fullWidth","DialogTitle_default","DialogContent_default","DialogActions_default","mainContainer","headerRow","MainComponent","componentDidMount","addStats","addRounds","Main","App","ReactDOM","children","react_redux_es","integration_react","loading","document","getElementById"],"mappings":"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","file":"static/js/main.28b3c4c3.chunk.js","sourcesContent":["import React from 'react';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { auth } from './auth/reducer';\nimport { rounds } from './rounds/reducer';\nimport { stats } from './stats/reducer';\n\nconst rootReducer = combineReducers({ auth, rounds, stats });\n\nconst store = createStore(\n  persistReducer(\n    { key: 'golf-stats', storage, whitelist: ['auth'] },\n    rootReducer\n  ),\n  applyMiddleware(thunk)\n);\n\nconst persistor = persistStore(store);\n\n// persistor.purge();\n\nexport const ReduxProvider = ({ children }: { children: any }) => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      {children}\n    </PersistGate>\n  </Provider>\n);\n","import { Reducer } from 'redux';\n\nimport { AuthStateType, AuthActionTypes } from './types';\n\nexport const auth: Reducer = (\n  state: AuthStateType = {\n    isAuthenticated: false,\n    authenticationFailed: false,\n    statusText: 'Please log in',\n    username: '',\n    token: ''\n  },\n  action: AuthActionTypes\n) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        isAuthenticated: true,\n        authenticationFailed: false,\n        statusText: 'You are logged in',\n        username: action.username,\n        token: action.token\n      };\n\n    case 'LOGIN_FAILURE':\n      return {\n        isAuthenticated: false,\n        authenticationFailed: true,\n        statusText: `Error logging in: ${action.error}`,\n        token: ''\n      };\n\n    case 'LOGOUT':\n      return {\n        isAuthenticated: false,\n        authenticationFailed: false,\n        statusText: 'Please log in',\n        token: ''\n      };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { RoundsStateType } from './types';\n\nexport const rounds: Reducer = (\n  state: RoundsStateType = {\n    roundsLoaded: false,\n    sortKey: 'date',\n    reverseSort: true,\n    selectedRoundIndex: 0,\n    selectedRoundIsLoaded: false,\n    showRoundDialog: false,\n    data: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_ROUNDS':\n      return { ...state, roundsLoaded: true, data: { ...action.data } };\n\n    case 'ADD_ROUND_DATA':\n      return {\n        ...state,\n        selectedRoundIsLoaded: true,\n        data: {\n          ...state.data,\n          [action.roundIndex]: {\n            ...state.data[action.roundIndex],\n            roundData: { ...action.data }\n          }\n        }\n      };\n\n    case 'SET_SELECTED_ROUND_IS_LOADED':\n      return { ...state, selectedRoundIsLoaded: true };\n\n    case 'SHOW_ROUND_DIALOG':\n      return {\n        ...state,\n        showRoundDialog: true,\n        selectedRoundIndex: action.roundIndex,\n        selectedRoundIsLoaded: false\n      };\n\n    case 'HIDE_ROUND_DIALOG':\n      return { ...state, showRoundDialog: false };\n\n    case 'SET_SORT_KEY':\n      if (action.sortKey === state.sortKey) {\n        return { ...state, reverseSort: !state.reverseSort };\n      } else {\n        if (action.sortKey === 'date' || action.sortKey === 'total_gir') {\n          return { ...state, reverseSort: true, sortKey: action.sortKey };\n        } else {\n          return { ...state, reverseSort: false, sortKey: action.sortKey };\n        }\n      }\n\n    case 'TOGGLE_SORT_ORDER':\n      return { ...state, reverseSort: !state.reverseSort };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { StatsStateType } from './types';\n\nexport const stats: Reducer = (\n  state: StatsStateType = {\n    statsLoaded: false,\n    selectedSeason: 2046,\n    data: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_STATS':\n      return { ...state, statsLoaded: true, data: { ...action.data } };\n\n    case 'SELECT_SEASON':\n      return {\n        ...state,\n        selectedSeason: action.season\n      };\n\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nconst tokenConfig = (token: string) => ({\n  headers: {\n    'Authorization': token // prettier-ignore\n  }\n});\n\nexport const getToken = (username: string, password: string) =>\n  axios.post('/api/get_token', { username, password });\n\nexport const validateToken = (token: string) =>\n  axios.post('/api/is_token_valid', { token });\n\nexport const getData = (url: string, token: string) =>\n  axios.get(url, tokenConfig(token));\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport jwtDecode from 'jwt-decode';\n\nimport { AppStateType } from '../types';\nimport { DecodedTokenType } from './types';\nimport { getToken, validateToken } from '../../utils/httpFunctions';\n\nexport const checkToken: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => (dispatch, getState) =>\n  validateToken(getState().auth.token)\n    .then(response => response.data)\n    .then(response => {\n      if (response) {\n        const username = jwtDecode<DecodedTokenType>(getState().auth.token)[\n          'username'\n        ];\n        return dispatch({ type: 'LOGIN_SUCCESS', username });\n      } else {\n        return dispatch({ type: 'LOGIN_FAILURE', error: 'Invalid token' });\n      }\n    })\n    .catch(() => dispatch({ type: 'LOGIN_FAILURE', error: 'Invalid token' }));\n\nexport const login: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = (username: string, password: string) => dispatch =>\n  getToken(username, password)\n    .then(response => response.data)\n    .then(response => {\n      return dispatch({\n        type: 'LOGIN_SUCCESS',\n        username,\n        token: response.token\n      });\n    })\n    .catch(() =>\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        error: 'Invalid username or password'\n      })\n    );\n\nexport const logout: ActionCreator<AnyAction> = () => ({ type: 'LOGOUT' });\n","import React from 'react';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { login } from '../store/auth/actions';\nimport { AppStateType } from '../store/types';\n\nconst styles = {\n  loginContainer: {\n    width: '200px',\n    margin: 'auto',\n    paddingTop: '10%',\n    paddingRight: '10%'\n  },\n  rowContainer: {\n    marginBottom: '20px'\n  }\n};\n\ninterface PropTypes {\n  statusText: string;\n  login: Function;\n}\n\nexport class LoginComponent extends React.Component<PropTypes> {\n  state = { username: '', password: '' };\n\n  handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) this.login();\n  };\n\n  login = () => {\n    this.props.login(this.state.username, this.state.password);\n  };\n\n  render = () => (\n    <div style={styles.loginContainer} onKeyDown={this.handleKeyPress}>\n      <h2>welcome</h2>\n      <h5>{this.props.statusText}</h5>\n      <div style={styles.rowContainer}>\n        <TextField\n          label=\"username\"\n          value={this.state.username}\n          placeholder=\"name\"\n          onChange={event => this.setState({ username: event.target.value })}\n        />\n      </div>\n      <div style={styles.rowContainer}>\n        <TextField\n          label=\"password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          value={this.state.password}\n          placeholder=\"password\"\n          onChange={event => this.setState({ password: event.target.value })}\n        />\n      </div>\n\n      <div style={styles.rowContainer}>\n        <Button\n          variant=\"outlined\"\n          style={{ marginTop: '10px' }}\n          onClick={this.login}\n        >\n          login\n        </Button>\n        <Button\n          variant=\"outlined\"\n          style={{ marginLeft: '10px', marginTop: '10px' }}\n          onClick={() => {}}\n        >\n          register\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  statusText: state.auth.statusText\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  login: (username: string, password: string) =>\n    dispatch(login(username, password))\n});\n\nexport const Login = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginComponent);\n","export const styles = {\n  roundsContainer: {\n    marginTop: '40px',\n    marginBottom: '50px'\n  },\n  loadingDiv: {\n    padding: '10px'\n  },\n  roundsTable: {\n    marginTop: '-10px'\n  },\n  dateCell: {\n    minWidth: '80px',\n    maxWidth: '80px',\n    padding: '8px'\n  },\n  courseCell: {\n    padding: '8px',\n    paddingLeft: '30px'\n  },\n  narrowCell: {\n    padding: '8px'\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport { setSortKey } from '../../../store/rounds/actions';\n\nimport { AppStateType } from '../../../store/types';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n  sortKey: string;\n  reverseSort: boolean;\n  setSortKey: Function;\n}\n\nexport const RoundsHeaderComponent: React.FC<PropTypes> = ({\n  sortKey,\n  reverseSort,\n  setSortKey\n}) => {\n  const renderItem = (value: string, key: string) => (\n    <TableCell\n      align={value === 'date' || value === 'course' ? 'left' : 'right'}\n      style={\n        value === 'date'\n          ? styles.dateCell\n          : value === 'course'\n          ? styles.courseCell\n          : styles.narrowCell\n      }\n    >\n      <TableSortLabel\n        active={sortKey === key}\n        direction={reverseSort ? 'desc' : 'asc'}\n        onClick={() => setSortKey(key)}\n      >\n        {value}\n      </TableSortLabel>\n    </TableCell>\n  );\n\n  return (\n    <TableHead>\n      <TableRow>\n        {renderItem('date', 'date')}\n        {renderItem('course', 'course')}\n        {renderItem('score', 'total_strokes')}\n        {renderItem('front', 'front_9_strokes')}\n        {renderItem('back', 'back_9_strokes')}\n        {renderItem('putts', 'total_putts')}\n        {renderItem('girs', 'total_gir')}\n        {renderItem('hdcp', 'handicap_index')}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  sortKey: state.rounds.sortKey,\n  reverseSort: state.rounds.reverseSort\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  setSortKey: (key: string) => dispatch(setSortKey(key))\n});\n\nexport const RoundsHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoundsHeaderComponent);\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getData } from '../../utils/httpFunctions';\n\nexport const addRounds: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => (dispatch, getState) =>\n  getData('/api/user/rounds', getState().auth.token)\n    .then(response => response.data)\n    .then(data => dispatch({ type: 'ADD_ROUNDS', data }))\n    .catch(() => console.log('failed to get rounds'));\n\nexport const showRoundDialog: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = (roundIndex: number) => (dispatch, getState) => {\n  dispatch({ type: 'SHOW_ROUND_DIALOG', roundIndex });\n\n  const rounds = getState().rounds.data;\n\n  if (!rounds[roundIndex].roundData) {\n    return getData('/api/round/' + rounds[roundIndex].id, getState().auth.token)\n      .then(response => response.data)\n      .then(data => dispatch({ type: 'ADD_ROUND_DATA', roundIndex, data }))\n      .catch(() => console.log('failed to get round data'));\n  } else {\n    return dispatch({ type: 'SET_SELECTED_ROUND_IS_LOADED' });\n  }\n};\n\nexport const hideRoundDialog: ActionCreator<AnyAction> = () => ({\n  type: 'HIDE_ROUND_DIALOG'\n});\n\nexport const setSortKey: ActionCreator<AnyAction> = (sortKey: string) => ({\n  type: 'SET_SORT_KEY',\n  sortKey\n});\n\nexport const toggleSortOrder: ActionCreator<AnyAction> = () => ({\n  type: 'TOGGLE_SORT_ORDER'\n});\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { showRoundDialog } from '../../../store/rounds/actions';\nimport { AppStateType } from '../../../store/types';\nimport { RoundsType } from '../../../store/rounds/types';\n\nimport { styles } from './styles';\n\nconst Cell = ({ text }: { text: number }) => (\n  <TableCell style={styles.narrowCell} align=\"right\">\n    {text}\n  </TableCell>\n);\n\ninterface PropTypes {\n  rounds: RoundsType;\n  sortKey: string;\n  reverseSort: boolean;\n  selectedSeason: number;\n  showRoundDialog: Function;\n}\n\nconst RoundsListComponent: React.FC<PropTypes> = ({\n  rounds,\n  sortKey,\n  reverseSort,\n  selectedSeason,\n  showRoundDialog\n}) => (\n  <TableBody>\n    {Object.keys(rounds)\n      .map(key => parseInt(key))\n      .filter(\n        key =>\n          selectedSeason === 2046 ||\n          rounds[key].date.split('-')[0] === '' + selectedSeason\n      )\n      .sort((a, b) => {\n        if (sortKey === 'date') {\n          return moment(rounds[reverseSort ? b : a]['date']).diff(\n            moment(rounds[reverseSort ? a : b]['date'])\n          );\n        } else {\n          const first = rounds[reverseSort ? b : a][sortKey];\n          const second = rounds[reverseSort ? a : b][sortKey];\n          return first > second ? 1 : -1;\n        }\n      })\n      .map(key => {\n        const round = rounds[key];\n\n        return (\n          <TableRow\n            key={key}\n            onClick={() => showRoundDialog(key)}\n            style={{ cursor: 'pointer' }}\n            hover\n          >\n            <TableCell style={styles.dateCell}>\n              {round['date'].split(' ')[0]}\n            </TableCell>\n            <TableCell style={styles.courseCell}>{round['course']}</TableCell>\n            <Cell text={round['total_strokes']} />\n            <Cell text={round['front_9_strokes']} />\n            <Cell text={round['back_9_strokes']} />\n            <Cell text={round['total_putts']} />\n            <Cell text={round['total_gir']} />\n            <Cell text={round['handicap_index']} />\n          </TableRow>\n        );\n      })}\n  </TableBody>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  rounds: state.rounds.data,\n  sortKey: state.rounds.sortKey,\n  reverseSort: state.rounds.reverseSort,\n  selectedSeason: state.stats.selectedSeason\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  showRoundDialog: (roundIndex: number) => dispatch(showRoundDialog(roundIndex))\n});\n\nexport const RoundsList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoundsListComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Table from '@material-ui/core/Table';\n\nimport { AppStateType } from '../../../store/types';\n\nimport { RoundsHeader } from './RoundsHeader';\nimport { RoundsList } from './RoundsList';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n  roundsLoaded: boolean;\n}\n\nexport const RoundsComponent: React.FC<PropTypes> = ({ roundsLoaded }) => (\n  <div style={styles.roundsContainer}>\n    <h2>rounds</h2>\n    {!roundsLoaded ? (\n      <div style={styles.loadingDiv}>\n        <h5>loading rounds...</h5>\n      </div>\n    ) : (\n      <Table padding=\"dense\" style={styles.roundsTable}>\n        <RoundsHeader />\n        <RoundsList />\n      </Table>\n    )}\n  </div>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  roundsLoaded: state.rounds.roundsLoaded\n});\n\nexport const Rounds = connect(mapStateToProps)(RoundsComponent);\n","export const styles = {\n  statsContainer: {\n    marginTop: '20px'\n  },\n  loadingDiv: {\n    padding: '10px'\n  },\n  statsTable: {\n    marginTop: '-10px'\n  },\n  seasonHeaderCell: {\n    minWidth: '60px',\n    maxWidth: '60px',\n    padding: '8px'\n  },\n  headerCell: {\n    padding: '8px'\n  },\n  seasonCell: {\n    minWidth: '60px',\n    maxWidth: '60px',\n    padding: '8px',\n    cursor: 'pointer'\n  },\n  selectedSeasonCell: {\n    minWidth: '60px',\n    maxWidth: '60px',\n    padding: '8px',\n    backgroundColor: '#f4faf4',\n    cursor: 'pointer'\n  },\n  selectedCell: {\n    minWidth: '40px',\n    maxWidth: '40px',\n    padding: '8px',\n    cursor: 'pointer',\n    backgroundColor: '#f4faf4'\n  },\n  regularCell: {\n    minWidth: '40px',\n    maxWidth: '40px',\n    padding: '8px',\n    cursor: 'pointer'\n  }\n};\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n  seasons: Array<number>;\n  selectedSeason: number;\n  onClick: Function;\n}\n\nconst stats: Array<string> = [\n  'score',\n  'putts',\n  'greens',\n  'handicap',\n  'par 3',\n  'par 4',\n  'par 5'\n];\n\nexport const StatsHeader: React.FC<PropTypes> = ({\n  seasons,\n  selectedSeason,\n  onClick\n}) => (\n  <TableHead>\n    <TableRow>\n      {/* <TableCell>season:</TableCell>\n      {seasons.map(season => (\n        <TableCell\n          align=\"right\"\n          key={season}\n          onClick={() => onClick(season)}\n          style={\n            // selectedSeason === season ? styles.selectedCell : styles.regularCell\n            styles.regularCell\n          }\n        >\n          {season === 2046 ? 'overall' : season}\n        </TableCell>\n      ))} */}\n      <TableCell style={styles.seasonHeaderCell}>season</TableCell>\n      {stats.map(stat => (\n        <TableCell align=\"right\" key={stat} style={styles.headerCell}>\n          {stat}\n        </TableCell>\n      ))}\n    </TableRow>\n  </TableHead>\n);\n","import React from 'react';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { StatsType } from '../../../store/stats/types';\n\nimport { styles } from './styles';\n\nconst statKeys = [\n  'strokes',\n  'putts',\n  'gir',\n  'handicap',\n  'par3',\n  'par4',\n  'par5'\n];\n\ninterface PropTypes {\n  seasons: Array<number>;\n  stats: StatsType;\n  selectedSeason: number;\n  onClick: Function;\n}\n\nexport const StatsList: React.FC<PropTypes> = ({\n  seasons,\n  stats,\n  selectedSeason,\n  onClick\n}) => (\n  <TableBody>\n    {seasons.map(season => (\n      <TableRow key={season} onClick={() => onClick(season)} hover>\n        <TableCell\n          style={\n            selectedSeason === season\n              ? styles.selectedSeasonCell\n              : styles.seasonCell\n          }\n        >\n          {season === 2046 ? 'overall' : season}\n        </TableCell>\n        {statKeys.map(stat => (\n          <TableCell\n            align=\"right\"\n            key={season + '-' + stat}\n            style={\n              selectedSeason === season\n                ? styles.selectedCell\n                : styles.regularCell\n            }\n          >\n            {stats[season][stat]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))}\n  </TableBody>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Table from '@material-ui/core/Table';\n\nimport { selectSeason } from '../../../store/stats/actions';\nimport { AppStateType } from '../../../store/types';\nimport { StatsType } from '../../../store/stats/types';\n\nimport { StatsHeader } from './StatsHeader';\nimport { StatsList } from './StatsList';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n  statsLoaded: boolean;\n  stats: StatsType;\n  selectedSeason: number;\n  selectSeason: Function;\n}\n\nconst StatsComponent: React.FC<PropTypes> = ({\n  statsLoaded,\n  stats,\n  selectedSeason,\n  selectSeason\n}) => {\n  const seasons = Object.keys(stats)\n    .map(s => parseInt(s))\n    .sort()\n    .reverse();\n\n  return (\n    <div style={styles.statsContainer}>\n      <h2>statistics</h2>\n      {!statsLoaded ? (\n        <div style={styles.loadingDiv}>\n          <h5>loading stats...</h5>\n        </div>\n      ) : (\n        <Table style={styles.statsTable}>\n          <StatsHeader\n            seasons={seasons}\n            selectedSeason={selectedSeason}\n            onClick={selectSeason}\n          />\n          <StatsList\n            seasons={seasons}\n            stats={stats}\n            selectedSeason={selectedSeason}\n            onClick={selectSeason}\n          />\n        </Table>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  statsLoaded: state.stats.statsLoaded,\n  stats: state.stats.data,\n  selectedSeason: state.stats.selectedSeason\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  selectSeason: (season: number) => dispatch(selectSeason(season))\n});\n\nexport const Stats = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StatsComponent);\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getData } from '../../utils/httpFunctions';\n\nexport const addStats: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => (dispatch, getState) =>\n  getData('/api/user/stats', getState().auth.token)\n    .then(response => response.data)\n    .then(data => dispatch({ type: 'ADD_STATS', data }))\n    .catch(() => console.log('failed to get stats'));\n\nexport const selectSeason: ActionCreator<AnyAction> = (season: string) => ({\n  type: 'SELECT_SEASON',\n  season\n});\n","export const styles = {\n  bigPadding: {\n    padding: '8px'\n  },\n  smallPadding: {\n    padding: '5px'\n  },\n  button: {\n    marginTop: '10px'\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { hideRoundDialog } from '../../../store/rounds/actions';\nimport { AppStateType } from '../../../store/types';\nimport { Round } from '../../../store/rounds/types';\n\nimport { styles } from './styles';\n\nconst frontNine = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconst backNine = [10, 11, 12, 13, 14, 15, 16, 17, 18];\n\nconst Cell = ({ text }: { text: any }) => (\n  <TableCell\n    align=\"right\"\n    style={('' + text).length > 1 ? styles.smallPadding : styles.bigPadding}\n  >\n    {text}\n  </TableCell>\n);\n\nconst CellLeft = ({ text }: { text: any }) => (\n  <TableCell style={styles.smallPadding}>{text}</TableCell>\n);\n\ninterface PropTypes {\n  selectedRoundIsLoaded: boolean;\n  round: Round;\n}\n\nexport const SelectedRoundTableComponent: React.FC<PropTypes> = ({\n  selectedRoundIsLoaded,\n  round\n}) => {\n  if (!selectedRoundIsLoaded) {\n    return (\n      <div style={{ padding: '20px' }}>\n        <h5>loading round data...</h5>\n      </div>\n    );\n  } else {\n    const roundData = round.roundData;\n\n    roundData['front_9_par'] = frontNine.reduce(\n      (sum, num) => sum + roundData['holes'][num]['par'],\n      0\n    );\n\n    roundData['back_9_par'] = backNine.reduce(\n      (sum, num) => sum + roundData['holes'][num]['par'],\n      0\n    );\n\n    roundData['total_par'] = roundData['front_9_par'] + roundData['back_9_par'];\n\n    const getStat = (holeNum: number, stat: string) =>\n      stat === 'gir'\n        ? roundData['holes'][holeNum]['gir']\n          ? '*'\n          : ''\n        : roundData['holes'][holeNum][stat];\n\n    const renderHole = (num: any) => <Cell text={num} key={'hole_' + num} />;\n\n    const renderTableRow = (label: string, stat: string) => (\n      <TableRow>\n        <CellLeft text={label + ':'} />\n        {frontNine.map(holeNum => renderHole(getStat(holeNum, stat)))}\n        <Cell text={roundData['front_9_' + stat]} />\n        {backNine.map(holeNum => renderHole(getStat(holeNum, stat)))}\n        <Cell text={roundData['back_9_' + stat]} />\n        <Cell text={roundData['total_' + stat]} />\n      </TableRow>\n    );\n\n    return (\n      <Table padding=\"dense\">\n        <TableHead>\n          <TableRow>\n            <CellLeft text=\"hole:\" />\n            {frontNine.map(renderHole)}\n            <Cell text=\"front\" />\n            {backNine.map(renderHole)}\n            <Cell text=\"back\" />\n            <Cell text=\"total\" />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderTableRow('par', 'par')}\n          {renderTableRow('score', 'strokes')}\n          {renderTableRow('putts', 'putts')}\n          {renderTableRow('gir', 'gir')}\n        </TableBody>\n      </Table>\n    );\n  }\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  selectedRoundIsLoaded: state.rounds.selectedRoundIsLoaded,\n  round: state.rounds.data[state.rounds.selectedRoundIndex]\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  hideRoundDialog: () => dispatch(hideRoundDialog())\n});\n\nexport const SelectedRoundTable = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedRoundTableComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { hideRoundDialog } from '../../../store/rounds/actions';\nimport { AppStateType } from '../../../store/types';\nimport { Round } from '../../../store/rounds/types';\n\nimport { SelectedRoundTable } from './SelectedRoundTable';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n  showRoundDialog: boolean;\n  round: Round;\n  hideRoundDialog: Function;\n}\n\nexport const SelectedRoundComponent: React.FC<PropTypes> = ({\n  showRoundDialog,\n  round,\n  hideRoundDialog\n}) => (\n  <Dialog\n    open={showRoundDialog}\n    onClose={() => hideRoundDialog()}\n    maxWidth=\"md\"\n    fullWidth={true}\n  >\n    <DialogTitle>\n      {round\n        ? round.date.split(' ')[0] +\n          (round.roundData ? ' - ' + round.roundData['course_name'] : '')\n        : ''}\n    </DialogTitle>\n    <DialogContent>\n      <SelectedRoundTable />\n    </DialogContent>\n    <DialogActions>\n      <Button\n        variant=\"outlined\"\n        style={styles.button}\n        onClick={() => hideRoundDialog()}\n      >\n        close\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  showRoundDialog: state.rounds.showRoundDialog,\n  round: state.rounds.data[state.rounds.selectedRoundIndex]\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  hideRoundDialog: () => dispatch(hideRoundDialog())\n});\n\nexport const SelectedRound = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedRoundComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { addRounds } from '../../store/rounds/actions';\nimport { addStats } from '../../store/stats/actions';\n\nimport { AppStateType } from '../../store/types';\nimport { StatsType } from '../../store/stats/types';\nimport { RoundsType } from '../../store/rounds/types';\n\nimport { Rounds } from './Rounds';\nimport { Stats } from './Stats';\nimport { SelectedRound } from './SelectedRound';\n\nconst styles = {\n  mainContainer: {\n    maxWidth: '720px',\n    minWidth: '480px',\n    margin: 'auto'\n  },\n  headerRow: {\n    marginTop: '20px'\n  }\n};\n\ninterface PropTypes {\n  username: string;\n  stats: StatsType;\n  rounds: RoundsType;\n  addStats: Function;\n  addRounds: Function;\n}\n\nclass MainComponent extends React.Component<PropTypes> {\n  componentDidMount = () => {\n    if (!this.props.stats[2046]) {\n      console.log('getting stats');\n      this.props.addStats();\n    }\n    if (!this.props.rounds[0]) {\n      console.log('getting rounds');\n      this.props.addRounds();\n    }\n  };\n\n  render = () => (\n    <div style={styles.mainContainer}>\n      <div style={styles.headerRow}>\n        <h1>hello {this.props.username}</h1>\n      </div>\n      <Stats />\n      <Rounds />\n      <SelectedRound />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  username: state.auth.username,\n  rounds: state.rounds.data,\n  stats: state.stats.data\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  addRounds: () => dispatch(addRounds()),\n  addStats: () => dispatch(addStats())\n});\n\nexport const Main = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { checkToken } from './store/auth/actions';\n\nimport { AppStateType } from './store/types';\n// import { Token } from './types/auth';\n\nimport { Login } from './screens/Login';\nimport { Main } from './screens/Main';\n\ntype PropTypes = {\n  token: string;\n  isAuthenticated: boolean;\n  authenticationFailed: boolean;\n  checkToken: Function;\n};\n\nconst AppComponent: React.FC<PropTypes> = ({\n  token,\n  isAuthenticated,\n  authenticationFailed,\n  checkToken\n}) => {\n  if (token && isAuthenticated) {\n    return <Main />;\n  } else if (!token || authenticationFailed) {\n    return <Login />;\n  } else {\n    checkToken();\n    return (\n      <div>\n        <p>authenticating...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  token: state.auth.token,\n  isAuthenticated: state.auth.isAuthenticated,\n  authenticationFailed: state.auth.authenticationFailed\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  checkToken: () => dispatch(checkToken())\n});\n\nexport const App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppComponent);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ReduxProvider } from './store';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <ReduxProvider>\n    <App />\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}