{"version":3,"sources":["store/index.tsx","store/auth/reducer.ts","store/rounds/reducer.ts","store/stats/reducer.ts","utils/httpFunctions.ts","store/auth/actions.ts","screens/Login.tsx","screens/Main/Rounds/styles.ts","screens/Main/Rounds/RoundsHeader.tsx","store/rounds/actions.ts","screens/Main/Rounds/RoundsList.tsx","screens/Main/Rounds/SelectedRound/SelectedRoundTable.tsx","screens/Main/Rounds/SelectedRound/index.tsx","screens/Main/Rounds/index.tsx","screens/Main/Stats/styles.ts","screens/Main/Stats/StatsHeader.tsx","screens/Main/Stats/StatsList.tsx","screens/Main/Stats/index.tsx","store/stats/actions.ts","screens/Main/index.tsx","App.tsx","index.tsx"],"names":["rootReducer","combineReducers","auth","state","arguments","length","undefined","isAuthenticated","authenticationFailed","statusText","username","token","action","type","concat","error","rounds","roundsLoaded","sortKey","reverseSort","selectedRoundIndex","selectedRoundIsLoaded","showRoundDialog","data","Object","objectSpread2","defineProperty","roundIndex","roundData","stats","statsLoaded","selectedSeason","season","store","createStore","persistReducer","key","storage","whitelist","applyMiddleware","thunk","persistor","persistStore","ReduxProvider","_ref","children","react_default","a","createElement","react_redux_es","integration_react","loading","getData","url","axios","get","headers","Authorization","tokenConfig","checkToken","dispatch","getState","post","then","response","jwtDecode","catch","login","password","getToken","styles","loginContainer","width","margin","paddingTop","paddingRight","rowContainer","marginBottom","LoginComponent","_React$Component","inherits","_super","createSuper","_this","classCallCheck","this","_len","args","Array","_key","call","apply","handleKeyPress","event","keyCode","props","render","style","onKeyDown","TextField_default","label","value","placeholder","onChange","setState","target","autoComplete","Button_default","variant","marginTop","onClick","marginLeft","React","Component","Login","connect","dateCell","minWidth","maxWidth","padding","courseCell","paddingLeft","narrowCell","RoundsHeader","setSortKey","renderItem","TableCell_default","align","TableSortLabel_default","active","direction","TableHead_default","TableRow_default","RoundsList","id","console","log","TableBody_default","keys","map","k","parseInt","filter","date","split","sort","b","moment","diff","round","cursor","hover","nineHoleArray","func","from","v","i","SelectedRoundTable","hideRoundDialog","nineHoleTotal","startHole","stat","_","reduce","total","hole","renderHoles","holeNumber","holeStat","renderTableRow","Table_default","SelectedRound","Dialog_default","open","onClose","fullWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Rounds","seasonHeaderCell","headerCell","seasonCell","selectedSeasonCell","backgroundColor","selectedCell","regularCell","StatsHeader","seasons","statKeys","StatsList","Stats","selectSeason","s","reverse","StatsHeader_StatsHeader","StatsList_StatsList","mainContainer","headerRow","MainComponent","componentDidMount","addStats","addRounds","Main","App","ReactDOM","store_ReduxProvider","document","getElementById"],"mappings":"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","file":"static/js/main.aa791c4c.chunk.js","sourcesContent":["import React from 'react';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { auth } from './auth/reducer';\nimport { rounds } from './rounds/reducer';\nimport { stats } from './stats/reducer';\n\nconst rootReducer = combineReducers({ auth, rounds, stats });\n\nconst store = createStore(\n  persistReducer(\n    { key: 'golf-stats', storage, whitelist: ['auth'] },\n    rootReducer\n  ),\n  applyMiddleware(thunk)\n);\n\nconst persistor = persistStore(store);\n\n// persistor.purge();\n\nexport const ReduxProvider = ({ children }: { children: any }) => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      {children}\n    </PersistGate>\n  </Provider>\n);\n","import { Reducer } from 'redux';\n\nimport { AuthStateType, AuthActionTypes } from './types';\n\nexport const auth: Reducer = (\n  state: AuthStateType = {\n    isAuthenticated: false,\n    authenticationFailed: false,\n    statusText: 'Please log in',\n    username: '',\n    token: ''\n  },\n  action: AuthActionTypes\n) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        isAuthenticated: true,\n        authenticationFailed: false,\n        statusText: 'You are logged in',\n        username: action.username,\n        token: action.token\n      };\n\n    case 'LOGIN_FAILURE':\n      return {\n        isAuthenticated: false,\n        authenticationFailed: true,\n        statusText: `Error logging in: ${action.error}`,\n        token: ''\n      };\n\n    case 'LOGOUT':\n      return {\n        isAuthenticated: false,\n        authenticationFailed: false,\n        statusText: 'Please log in',\n        token: ''\n      };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { RoundsStateType } from './types';\n\nexport const rounds: Reducer = (\n  state: RoundsStateType = {\n    roundsLoaded: false,\n    sortKey: 'date',\n    reverseSort: true,\n    selectedRoundIndex: 0,\n    selectedRoundIsLoaded: false,\n    showRoundDialog: false,\n    data: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_ROUNDS':\n      return { ...state, roundsLoaded: true, data: { ...action.data } };\n\n    case 'ADD_ROUND_DATA':\n      return {\n        ...state,\n        selectedRoundIsLoaded: true,\n        data: {\n          ...state.data,\n          [action.roundIndex]: {\n            ...state.data[action.roundIndex],\n            roundData: { ...action.data }\n          }\n        }\n      };\n\n    case 'SET_SELECTED_ROUND_IS_LOADED':\n      return { ...state, selectedRoundIsLoaded: true };\n\n    case 'SHOW_ROUND_DIALOG':\n      return {\n        ...state,\n        showRoundDialog: true,\n        selectedRoundIndex: action.roundIndex,\n        selectedRoundIsLoaded: false\n      };\n\n    case 'HIDE_ROUND_DIALOG':\n      return { ...state, showRoundDialog: false };\n\n    case 'SET_SORT_KEY':\n      if (action.sortKey === state.sortKey) {\n        return { ...state, reverseSort: !state.reverseSort };\n      } else {\n        if (action.sortKey === 'date' || action.sortKey === 'total_gir') {\n          return { ...state, reverseSort: true, sortKey: action.sortKey };\n        } else {\n          return { ...state, reverseSort: false, sortKey: action.sortKey };\n        }\n      }\n\n    case 'TOGGLE_SORT_ORDER':\n      return { ...state, reverseSort: !state.reverseSort };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { StatsStateType } from './types';\n\nexport const stats: Reducer = (\n  state: StatsStateType = {\n    statsLoaded: false,\n    selectedSeason: 2046,\n    data: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_STATS':\n      return { ...state, statsLoaded: true, data: { ...action.data } };\n\n    case 'SELECT_SEASON':\n      return {\n        ...state,\n        selectedSeason: action.season\n      };\n\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nconst tokenConfig = (token: string) => ({\n  headers: {\n    'Authorization': token // prettier-ignore\n  }\n});\n\nexport const getToken = (username: string, password: string) =>\n  axios.post('/api/get_token', { username, password });\n\nexport const validateToken = (token: string) =>\n  axios.post('/api/is_token_valid', { token });\n\nexport const getData = (url: string, token: string) =>\n  axios.get(url, tokenConfig(token));\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport jwtDecode from 'jwt-decode';\n\nimport { AppStateType } from '../types';\nimport { DecodedTokenType } from './types';\nimport { getToken, validateToken } from '../../utils/httpFunctions';\n\nexport const checkToken: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => (dispatch, getState) =>\n  validateToken(getState().auth.token)\n    .then(response => response.data)\n    .then(response => {\n      if (response) {\n        const username = jwtDecode<DecodedTokenType>(getState().auth.token)[\n          'username'\n        ];\n        return dispatch({ type: 'LOGIN_SUCCESS', username });\n      } else {\n        return dispatch({ type: 'LOGIN_FAILURE', error: 'Invalid token' });\n      }\n    })\n    .catch(() => dispatch({ type: 'LOGIN_FAILURE', error: 'Invalid token' }));\n\nexport const login: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = (username: string, password: string) => dispatch =>\n  getToken(username, password)\n    .then(response => response.data)\n    .then(response => {\n      return dispatch({\n        type: 'LOGIN_SUCCESS',\n        username,\n        token: response.token\n      });\n    })\n    .catch(() =>\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        error: 'Invalid username or password'\n      })\n    );\n\nexport const logout: ActionCreator<AnyAction> = () => ({ type: 'LOGOUT' });\n","import React from 'react';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { login } from '../store/auth/actions';\nimport { AppStateType } from '../store/types';\n\nconst styles = {\n  loginContainer: {\n    width: '200px',\n    margin: 'auto',\n    paddingTop: '10%',\n    paddingRight: '10%'\n  },\n  rowContainer: {\n    marginBottom: '20px'\n  }\n};\n\ninterface PropTypes {\n  statusText: string;\n  login: Function;\n}\n\nexport class LoginComponent extends React.Component<PropTypes> {\n  state = { username: '', password: '' };\n\n  handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) this.login();\n  };\n\n  login = () => {\n    this.props.login(this.state.username, this.state.password);\n  };\n\n  render = () => (\n    <div style={styles.loginContainer} onKeyDown={this.handleKeyPress}>\n      <h2>welcome</h2>\n      <h5>{this.props.statusText}</h5>\n      <div style={styles.rowContainer}>\n        <TextField\n          label=\"username\"\n          value={this.state.username}\n          placeholder=\"name\"\n          onChange={event => this.setState({ username: event.target.value })}\n        />\n      </div>\n      <div style={styles.rowContainer}>\n        <TextField\n          label=\"password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          value={this.state.password}\n          placeholder=\"password\"\n          onChange={event => this.setState({ password: event.target.value })}\n        />\n      </div>\n\n      <div style={styles.rowContainer}>\n        <Button\n          variant=\"outlined\"\n          style={{ marginTop: '10px' }}\n          onClick={this.login}\n        >\n          login\n        </Button>\n        <Button\n          variant=\"outlined\"\n          style={{ marginLeft: '10px', marginTop: '10px' }}\n          onClick={() => {}}\n        >\n          register\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  statusText: state.auth.statusText\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  login: (username: string, password: string) =>\n    dispatch(login(username, password))\n});\n\nexport const Login = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginComponent);\n","export const styles = {\n  dateCell: { minWidth: '80px', maxWidth: '80px', padding: '8px' },\n  courseCell: { padding: '8px', paddingLeft: '30px' },\n  narrowCell: { padding: '8px' }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport { setSortKey } from '../../../store/rounds/actions';\n\nimport { AppStateType } from '../../../store/types';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n  sortKey: string;\n  reverseSort: boolean;\n  setSortKey: Function;\n}\n\nexport const RoundsHeaderComponent: React.FC<PropTypes> = ({\n  sortKey,\n  reverseSort,\n  setSortKey\n}) => {\n  const renderItem = (value: string, key: string) => (\n    <TableCell\n      align={value === 'date' || value === 'course' ? 'left' : 'right'}\n      style={\n        value === 'date'\n          ? styles.dateCell\n          : value === 'course'\n          ? styles.courseCell\n          : styles.narrowCell\n      }\n    >\n      <TableSortLabel\n        active={sortKey === key}\n        direction={reverseSort ? 'desc' : 'asc'}\n        onClick={() => setSortKey(key)}\n      >\n        {value}\n      </TableSortLabel>\n    </TableCell>\n  );\n\n  return (\n    <TableHead>\n      <TableRow>\n        {renderItem('date', 'date')}\n        {renderItem('course', 'course')}\n        {renderItem('score', 'total_strokes')}\n        {renderItem('front', 'front_9_strokes')}\n        {renderItem('back', 'back_9_strokes')}\n        {renderItem('putts', 'total_putts')}\n        {renderItem('girs', 'total_gir')}\n        {renderItem('hdcp', 'handicap_index')}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  sortKey: state.rounds.sortKey,\n  reverseSort: state.rounds.reverseSort\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  setSortKey: (key: string) => dispatch(setSortKey(key))\n});\n\nexport const RoundsHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoundsHeaderComponent);\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getData } from '../../utils/httpFunctions';\n\nexport const addRounds: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => (dispatch, getState) =>\n  getData('/api/user/rounds', getState().auth.token)\n    .then(response => response.data)\n    .then(data => dispatch({ type: 'ADD_ROUNDS', data }))\n    .catch(() => console.log('failed to get rounds'));\n\nexport const showRoundDialog: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = (roundIndex: number) => (dispatch, getState) => {\n  dispatch({ type: 'SHOW_ROUND_DIALOG', roundIndex });\n\n  const rounds = getState().rounds.data;\n\n  if (!rounds[roundIndex].roundData) {\n    return getData('/api/round/' + rounds[roundIndex].id, getState().auth.token)\n      .then(response => response.data)\n      .then(data => dispatch({ type: 'ADD_ROUND_DATA', roundIndex, data }))\n      .catch(() => console.log('failed to get round data'));\n  } else {\n    return dispatch({ type: 'SET_SELECTED_ROUND_IS_LOADED' });\n  }\n};\n\nexport const hideRoundDialog: ActionCreator<AnyAction> = () => ({\n  type: 'HIDE_ROUND_DIALOG'\n});\n\nexport const setSortKey: ActionCreator<AnyAction> = (sortKey: string) => ({\n  type: 'SET_SORT_KEY',\n  sortKey\n});\n\nexport const toggleSortOrder: ActionCreator<AnyAction> = () => ({\n  type: 'TOGGLE_SORT_ORDER'\n});\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { showRoundDialog } from '../../../store/rounds/actions';\n\nimport { AppStateType } from '../../../store/types';\nimport { RoundsType } from '../../../store/rounds/types';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n  rounds: RoundsType;\n  sortKey: string;\n  reverseSort: boolean;\n  selectedSeason: number;\n  showRoundDialog: Function;\n}\n\nconst RoundsListComponent: React.FC<PropTypes> = props => (\n  <TableBody>\n    {Object.keys(props.rounds)\n      .map(k => parseInt(k))\n      .filter(\n        key =>\n          props.selectedSeason === 2046 ||\n          props.rounds[key].date.split('-')[0] === '' + props.selectedSeason\n      )\n      .sort((a, b) => {\n        if (props.sortKey === 'date') {\n          return moment(props.rounds[props.reverseSort ? b : a]['date']).diff(\n            moment(props.rounds[props.reverseSort ? a : b]['date'])\n          );\n        } else {\n          const first = props.rounds[props.reverseSort ? b : a][props.sortKey];\n          const second = props.rounds[props.reverseSort ? a : b][props.sortKey];\n          return first > second ? 1 : -1;\n        }\n      })\n      .map(key => {\n        const round = props.rounds[key];\n\n        return (\n          <TableRow\n            key={key}\n            onClick={() => props.showRoundDialog(key)}\n            style={{ cursor: 'pointer' }}\n            hover\n          >\n            <TableCell style={styles.dateCell}>\n              {round['date'].split(' ')[0]}\n            </TableCell>\n            <TableCell style={styles.courseCell}>{round['course']}</TableCell>\n            <TableCell style={styles.narrowCell} align=\"right\">\n              {round['total_strokes']}\n            </TableCell>\n            <TableCell style={styles.narrowCell} align=\"right\">\n              {round['front_9_strokes']}\n            </TableCell>\n            <TableCell style={styles.narrowCell} align=\"right\">\n              {round['back_9_strokes']}\n            </TableCell>\n            <TableCell style={styles.narrowCell} align=\"right\">\n              {round['total_putts']}\n            </TableCell>\n            <TableCell style={styles.narrowCell} align=\"right\">\n              {round['total_gir']}\n            </TableCell>\n            <TableCell style={styles.narrowCell} align=\"right\">\n              {round['handicap_index']}\n            </TableCell>\n          </TableRow>\n        );\n      })}\n  </TableBody>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  rounds: state.rounds.data,\n  sortKey: state.rounds.sortKey,\n  reverseSort: state.rounds.reverseSort,\n  selectedSeason: state.stats.selectedSeason\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  showRoundDialog: (roundIndex: number) => dispatch(showRoundDialog(roundIndex))\n});\n\nexport const RoundsList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoundsListComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { hideRoundDialog } from '../../../../store/rounds/actions';\n\nimport { AppStateType } from '../../../../store/types';\nimport { Round } from '../../../../store/rounds/types';\n\nconst nineHoleArray = (func: Function) =>\n  Array.from({ length: 9 }, (v, i) => func(v, i));\n\ninterface PropTypes {\n  selectedRoundIsLoaded: boolean;\n  round: Round;\n}\n\nexport const SelectedRoundTableComponent: React.FC<PropTypes> = ({\n  selectedRoundIsLoaded,\n  round\n}) => {\n  if (!selectedRoundIsLoaded) {\n    return (\n      <div style={{ padding: '20px' }}>\n        <h5>loading round data...</h5>\n      </div>\n    );\n  } else {\n    const roundData = round.roundData;\n    const nineHoleTotal = (startHole: number, stat: string) =>\n      nineHoleArray(\n        (_: any, i: number) => roundData['holes'][i + startHole][stat]\n      ).reduce((total: number, hole: number) => total + hole);\n\n    roundData['front_9_par'] = nineHoleTotal(1, 'par');\n    roundData['back_9_par'] = nineHoleTotal(10, 'par');\n    roundData['total_par'] = roundData['front_9_par'] + roundData['back_9_par'];\n\n    const holeStat = (holeNumber: number, stat: string) =>\n      stat === 'gir'\n        ? roundData['holes'][holeNumber]['gir']\n          ? '*'\n          : ''\n        : roundData['holes'][holeNumber][stat];\n\n    const renderHoles = (startHole: number, stat: string) =>\n      nineHoleArray((_: any, i: number) => (\n        <TableCell\n          align=\"right\"\n          style={{ padding: '6px' }}\n          key={stat + '_' + (i + startHole)}\n        >\n          {holeStat(i + startHole, stat)}\n        </TableCell>\n      ));\n\n    const renderTableRow = (label: string, stat: string) => (\n      <TableRow>\n        <TableCell style={{ padding: '8px' }}>{label}:</TableCell>\n        {renderHoles(1, stat)}\n        <TableCell align=\"right\" style={{ padding: '8px' }}>\n          {roundData['front_9_' + stat]}\n        </TableCell>\n        {renderHoles(10, stat)}\n        <TableCell align=\"right\" style={{ padding: '8px' }}>\n          {roundData['back_9_' + stat]}\n        </TableCell>\n        <TableCell align=\"right\" style={{ padding: '8px' }}>\n          {roundData['total_' + stat]}\n        </TableCell>\n      </TableRow>\n    );\n\n    return (\n      <Table padding=\"dense\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ padding: '8px' }}>hole:</TableCell>\n            {nineHoleArray((_: any, i: number) => (\n              <TableCell\n                align=\"right\"\n                style={{ padding: '6px' }}\n                key={'hole_' + (i + 1)}\n              >\n                {i + 1}\n              </TableCell>\n            ))}\n            <TableCell align=\"right\" style={{ padding: '8px' }}>\n              front\n            </TableCell>\n            {nineHoleArray((_: any, i: number) => (\n              <TableCell\n                align=\"right\"\n                style={{ padding: '6px' }}\n                key={'hole_' + (i + 10)}\n              >\n                {i + 10}\n              </TableCell>\n            ))}\n            <TableCell align=\"right\" style={{ padding: '8px' }}>\n              back\n            </TableCell>\n            <TableCell align=\"right\" style={{ padding: '8px' }}>\n              total\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderTableRow('par', 'par')}\n          {renderTableRow('score', 'strokes')}\n          {renderTableRow('putts', 'putts')}\n          {renderTableRow('gir', 'gir')}\n        </TableBody>\n      </Table>\n    );\n  }\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  selectedRoundIsLoaded: state.rounds.selectedRoundIsLoaded,\n  round: state.rounds.data[state.rounds.selectedRoundIndex]\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  hideRoundDialog: () => dispatch(hideRoundDialog())\n});\n\nexport const SelectedRoundTable = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedRoundTableComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { hideRoundDialog } from '../../../../store/rounds/actions';\n\nimport { AppStateType } from '../../../../store/types';\nimport { Round } from '../../../../store/rounds/types';\n\nimport { SelectedRoundTable } from './SelectedRoundTable';\n\ninterface PropTypes {\n  showRoundDialog: boolean;\n  round: Round;\n  hideRoundDialog: Function;\n}\n\nexport const SelectedRoundComponent: React.FC<PropTypes> = ({\n  showRoundDialog,\n  round,\n  hideRoundDialog\n}) => (\n  <Dialog\n    open={showRoundDialog}\n    onClose={event => hideRoundDialog()}\n    maxWidth=\"md\"\n    fullWidth={true}\n  >\n    <DialogTitle>\n      {round\n        ? round.date.split(' ')[0] +\n          (round.roundData ? ' - ' + round.roundData['course_name'] : '')\n        : ''}\n    </DialogTitle>\n    <DialogContent>\n      <SelectedRoundTable />\n    </DialogContent>\n    <DialogActions>\n      <Button\n        variant=\"outlined\"\n        style={{ marginTop: '10px' }}\n        onClick={event => hideRoundDialog()}\n      >\n        close\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  showRoundDialog: state.rounds.showRoundDialog,\n  round: state.rounds.data[state.rounds.selectedRoundIndex]\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  hideRoundDialog: () => dispatch(hideRoundDialog())\n});\n\nexport const SelectedRound = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedRoundComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Table from '@material-ui/core/Table';\n\nimport { AppStateType } from '../../../store/types';\n\nimport { RoundsHeader } from './RoundsHeader';\nimport { RoundsList } from './RoundsList';\n\nimport { SelectedRound } from './SelectedRound';\n\ninterface PropTypes {\n  roundsLoaded: boolean;\n}\n\nexport const RoundsComponent: React.FC<PropTypes> = ({ roundsLoaded }) => (\n  <div style={{ marginTop: '40px', marginBottom: '50px' }}>\n    <h2>rounds</h2>\n    {!roundsLoaded ? (\n      <div style={{ padding: '10px' }}>\n        <h5>loading rounds...</h5>\n      </div>\n    ) : (\n      <Table padding=\"dense\" style={{ marginTop: '-10px'}}>\n        <RoundsHeader />\n        <RoundsList />\n      </Table>\n    )}\n    <SelectedRound />\n  </div>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  roundsLoaded: state.rounds.roundsLoaded\n});\n\nexport const Rounds = connect(mapStateToProps)(RoundsComponent);\n","export const styles = {\n  seasonHeaderCell: {\n    minWidth: '60px',\n    maxWidth: '60px',\n    padding: '8px'\n  },\n  headerCell: { padding: '8px' },\n  seasonCell: {\n    minWidth: '60px',\n    maxWidth: '60px',\n    padding: '8px',\n    cursor: 'pointer'\n  },\n  selectedSeasonCell: {\n    minWidth: '60px',\n    maxWidth: '60px',\n    padding: '8px',\n    backgroundColor: '#f4faf4',\n    cursor: 'pointer'\n  },\n  selectedCell: {\n    minWidth: '40px',\n    maxWidth: '40px',\n    padding: '8px',\n    cursor: 'pointer',\n    backgroundColor: '#f4faf4'\n  },\n  regularCell: {\n    minWidth: '40px',\n    maxWidth: '40px',\n    padding: '8px',\n    cursor: 'pointer'\n  }\n};\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n  seasons: Array<number>;\n  selectedSeason: number;\n  onClick: Function;\n}\n\nconst stats: Array<string> = [\n  'score',\n  'putts',\n  'greens',\n  'handicap',\n  'par 3',\n  'par 4',\n  'par 5'\n];\n\nexport const StatsHeader: React.FC<PropTypes> = ({\n  seasons,\n  selectedSeason,\n  onClick\n}) => (\n  <TableHead>\n    <TableRow>\n      {/* <TableCell>season:</TableCell>\n      {seasons.map(season => (\n        <TableCell\n          align=\"right\"\n          key={season}\n          onClick={() => onClick(season)}\n          style={\n            // selectedSeason === season ? styles.selectedCell : styles.regularCell\n            styles.regularCell\n          }\n        >\n          {season === 2046 ? 'overall' : season}\n        </TableCell>\n      ))} */}\n      <TableCell style={styles.seasonHeaderCell}>season</TableCell>\n      {stats.map(stat => (\n        <TableCell align=\"right\" key={stat} style={styles.headerCell}>\n          {stat}\n        </TableCell>\n      ))}\n    </TableRow>\n  </TableHead>\n);\n","import React from 'react';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { StatsType } from '../../../store/stats/types';\n\nimport { styles } from './styles';\n\n// type StatKeysType = { [stat: string]: string };\n\n// const statKeys: StatKeysType = {\n//   strokes: 'scoring average',\n//   putts: 'putts per round',\n//   gir: 'greens per round',\n//   handicap: 'handicap',\n//   par3: 'par 3 average',\n//   par4: 'par 4 average',\n//   par5: 'par 5 average'\n// };\n\nconst statKeys: Array<string> = [\n  'strokes',\n  'putts',\n  'gir',\n  'handicap',\n  'par3',\n  'par4',\n  'par5'\n];\n\ninterface PropTypes {\n  seasons: Array<number>;\n  stats: StatsType;\n  selectedSeason: number;\n  onClick: Function;\n}\n\nexport const StatsList: React.FC<PropTypes> = ({\n  seasons,\n  stats,\n  selectedSeason,\n  onClick\n}) => (\n  // <TableBody>\n  //   {Object.keys(statKeys).map(stat => (\n  //     <TableRow key={stat}>\n  //       <TableCell>{statKeys[stat]}:</TableCell>\n  //       {seasons.map(season => (\n  //         <TableCell\n  //           align=\"right\"\n  //           key={season + '-' + stat}\n  //           onClick={() => onClick(season)}\n  //           style={\n  //             selectedSeason === season\n  //               ? styles.selectedCell\n  //               : styles.regularCell\n  //           }\n  //         >\n  //           {stats[season][stat]}\n  //         </TableCell>\n  //       ))}\n  //     </TableRow>\n  //   ))}\n  // </TableBody>\n  <TableBody>\n    {seasons.map((season: number) => (\n      <TableRow key={season} onClick={() => onClick(season)} hover>\n        <TableCell\n          style={\n            selectedSeason === season\n              ? styles.selectedSeasonCell\n              : styles.seasonCell\n          }\n        >\n          {season === 2046 ? 'overall' : season}\n        </TableCell>\n        {statKeys.map((stat: string) => (\n          <TableCell\n            align=\"right\"\n            key={season + '-' + stat}\n            style={\n              selectedSeason === season\n                ? styles.selectedCell\n                : styles.regularCell\n            }\n          >\n            {stats[season][stat]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))}\n  </TableBody>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Table from '@material-ui/core/Table';\n\nimport { selectSeason } from '../../../store/stats/actions';\n\nimport { AppStateType } from '../../../store/types';\nimport { StatsType } from '../../../store/stats/types';\n\nimport { StatsHeader } from './StatsHeader';\nimport { StatsList } from './StatsList';\n\ninterface PropTypes {\n  statsLoaded: boolean;\n  stats: StatsType;\n  selectedSeason: number;\n  selectSeason: Function;\n}\n\nconst StatsComponent: React.FC<PropTypes> = ({\n  statsLoaded,\n  stats,\n  selectedSeason,\n  selectSeason\n}) => {\n  const seasons = Object.keys(stats)\n    .map(s => parseInt(s))\n    .sort()\n    .reverse();\n\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <h2>statistics</h2>\n      {!statsLoaded ? (\n        <div style={{ padding: '10px' }}>\n          <h5>loading stats...</h5>\n        </div>\n      ) : (\n        <Table style={{ marginTop: '-10px' }}>\n          <StatsHeader\n            seasons={seasons}\n            selectedSeason={selectedSeason}\n            onClick={selectSeason}\n          />\n          <StatsList\n            seasons={seasons}\n            stats={stats}\n            selectedSeason={selectedSeason}\n            onClick={selectSeason}\n          />\n        </Table>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  statsLoaded: state.stats.statsLoaded,\n  stats: state.stats.data,\n  selectedSeason: state.stats.selectedSeason\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  selectSeason: (season: number) => dispatch(selectSeason(season))\n});\n\nexport const Stats = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StatsComponent);\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getData } from '../../utils/httpFunctions';\n\nexport const addStats: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => (dispatch, getState) =>\n  getData('/api/user/stats', getState().auth.token)\n    .then(response => response.data)\n    .then(data => dispatch({ type: 'ADD_STATS', data }))\n    .catch(() => console.log('failed to get stats'));\n\nexport const selectSeason: ActionCreator<AnyAction> = (season: string) => ({\n  type: 'SELECT_SEASON',\n  season\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { addRounds } from '../../store/rounds/actions';\nimport { addStats } from '../../store/stats/actions';\n\nimport { AppStateType } from '../../store/types';\nimport { StatsType } from '../../store/stats/types';\nimport { RoundsType } from '../../store/rounds/types';\n\nimport { Rounds } from './Rounds';\nimport { Stats } from './Stats';\n\nconst styles = {\n  mainContainer: {\n    maxWidth: '720px',\n    minWidth: '480px',\n    margin: 'auto'\n  },\n  headerRow: {\n    marginTop: '20px'\n    // display: 'flex',\n    // justifyContent: 'center'\n  }\n};\n\ninterface PropTypes {\n  username: string;\n  stats: StatsType;\n  rounds: RoundsType;\n  addStats: Function;\n  addRounds: Function;\n}\n\nclass MainComponent extends React.Component<PropTypes> {\n  componentDidMount = () => {\n    if (!this.props.stats[2046]) {\n      console.log('getting stats');\n      this.props.addStats();\n    }\n    if (!this.props.rounds[0]) {\n      console.log('getting rounds');\n      this.props.addRounds();\n    }\n  };\n\n  render = () => (\n    <div style={styles.mainContainer}>\n      <div style={styles.headerRow}>\n        <h1>hello {this.props.username}</h1>\n      </div>\n      <Stats />\n      <Rounds />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  username: state.auth.username,\n  rounds: state.rounds.data,\n  stats: state.stats.data\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  addRounds: () => dispatch(addRounds()),\n  addStats: () => dispatch(addStats())\n});\n\nexport const Main = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { checkToken } from './store/auth/actions';\n\nimport { AppStateType } from './store/types';\n// import { Token } from './types/auth';\n\nimport { Login } from './screens/Login';\nimport { Main } from './screens/Main';\n\ntype PropTypes = {\n  token: string;\n  isAuthenticated: boolean;\n  authenticationFailed: boolean;\n  checkToken: Function;\n};\n\nconst AppComponent: React.FC<PropTypes> = ({\n  token,\n  isAuthenticated,\n  authenticationFailed,\n  checkToken\n}) => {\n  if (token && isAuthenticated) {\n    return <Main />;\n  } else if (!token || authenticationFailed) {\n    return <Login />;\n  } else {\n    checkToken();\n    return (\n      <div>\n        <p>authenticating...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  token: state.auth.token,\n  isAuthenticated: state.auth.isAuthenticated,\n  authenticationFailed: state.auth.authenticationFailed\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  checkToken: () => dispatch(checkToken())\n});\n\nexport const App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppComponent);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ReduxProvider } from './store';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <ReduxProvider>\n    <App />\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}