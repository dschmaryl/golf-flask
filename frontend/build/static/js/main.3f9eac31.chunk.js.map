{"version":3,"sources":["reducers/index.ts","reducers/auth.ts","reducers/rounds.ts","reducers/stats.ts","reducers/token.ts","store.tsx","utils/httpFunctions.ts","actions/auth.ts","screens/Login.tsx","screens/Main/Rounds/RoundsHeader.tsx","screens/Main/Rounds/RoundsList.tsx","actions/rounds.ts","screens/Main/Rounds/SelectedRound/SelectedRoundTable.tsx","screens/Main/Rounds/SelectedRound/index.tsx","screens/Main/Rounds/index.tsx","screens/Main/Stats/StatsHeader.tsx","screens/Main/Stats/StatsList.tsx","screens/Main/Stats/index.tsx","actions/stats.ts","screens/Main/index.tsx","App.tsx","index.tsx"],"names":["rootReducer","combineReducers","auth","state","arguments","length","undefined","isAuthenticated","authenticationFailed","statusText","username","action","type","concat","error","rounds","roundsLoaded","sortKey","reverseSort","selectedRoundIndex","selectedRoundIsLoaded","showRoundDialog","data","Object","objectSpread","defineProperty","roundIndex","roundData","stats","statsLoaded","selectedSeason","season","token","store","createStore","persistReducer","key","storage","whitelist","applyMiddleware","thunk","persistor","persistStore","getData","url","axios","get","headers","Authorization","tokenConfig","checkToken","dispatch","getState","post","then","response","jwtDecode","catch","login","password","getToken","styles","loginContainer","width","margin","rowContainer","marginBottom","LoginComponent","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleKeyPress","event","keyCode","props","render","react_default","a","createElement","style","onKeyDown","TextField_default","label","value","placeholder","onChange","setState","target","autoComplete","Button_default","variant","marginTop","onClick","marginLeft","inherits","React","Component","Login","connect","renderItem","TableCell_default","align","RoundsHeader","_ref","TableHead_default","cursor","TableRow_default","RoundsList","id","console","log","TableBody_default","keys","map","k","parseInt","filter","date","split","sort","b","moment","diff","round","nineHoleArray","func","from","v","i","SelectedRoundTable","hideRoundDialog","nineHoleTotal","startHole","stat","_","reduce","total","hole","renderHoles","padding","holeNumber","holeStat","renderTableRow","Table_default","SelectedRound","Dialog_default","open","onClose","maxWidth","fullWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Rounds","setSortKey","RoundsHeader_RoundsHeader","StatsHeader","seasons","statKeys","strokes","putts","gir","handicap","par3","par4","par5","StatsList","Stats","selectSeason","s","reverse","StatsHeader_StatsHeader","StatsList_StatsList","mainContainer","minWidth","headerRow","MainComponent","componentDidMount","addStats","addRounds","Main","App","ReactDOM","children","react_redux_es","integration_react","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3f9eac31.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nimport { auth } from './auth';\nimport { rounds } from './rounds';\nimport { stats } from './stats';\nimport { token } from './token';\n\nexport const rootReducer = combineReducers({\n  auth,\n  rounds,\n  stats,\n  token\n});\n","import { Reducer } from 'redux';\n\nimport { AuthStateType, AuthActionTypes } from '../types/auth';\n\nexport const auth: Reducer = (\n  state: AuthStateType = {\n    isAuthenticated: false,\n    authenticationFailed: false,\n    statusText: 'Please log in',\n    username: ''\n  },\n  action: AuthActionTypes\n) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        isAuthenticated: true,\n        authenticationFailed: false,\n        statusText: 'You are logged in',\n        username: action.username\n      };\n\n    case 'LOGIN_FAILURE':\n      return {\n        isAuthenticated: false,\n        authenticationFailed: true,\n        statusText: `Error logging in: ${action.error}`\n      };\n\n    case 'LOGOUT':\n      return {\n        isAuthenticated: false,\n        authenticationFailed: false,\n        statusText: 'Please log in'\n      };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { RoundsStateType } from '../types/rounds';\n\nexport const rounds: Reducer = (\n  state: RoundsStateType = {\n    roundsLoaded: false,\n    sortKey: 'date',\n    reverseSort: true,\n    selectedRoundIndex: 0,\n    selectedRoundIsLoaded: false,\n    showRoundDialog: false,\n    data: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_ROUNDS':\n      return { ...state, roundsLoaded: true, data: { ...action.data } };\n\n    case 'ADD_ROUND_DATA':\n      return {\n        ...state,\n        selectedRoundIsLoaded: true,\n        data: {\n          ...state.data,\n          [action.roundIndex]: {\n            ...state.data[action.roundIndex],\n            roundData: { ...action.data }\n          }\n        }\n      };\n\n    case 'SET_SELECTED_ROUND_IS_LOADED':\n      return { ...state, selectedRoundIsLoaded: true };\n\n    case 'SHOW_ROUND_DIALOG':\n      return {\n        ...state,\n        showRoundDialog: true,\n        selectedRoundIndex: action.roundIndex,\n        selectedRoundIsLoaded: false\n      };\n\n    case 'HIDE_ROUND_DIALOG':\n      return { ...state, showRoundDialog: false };\n\n    case 'SET_SORT_KEY':\n      if (action.sortKey === state.sortKey) {\n        return { ...state, reverseSort: !state.reverseSort };\n      } else {\n        if (action.sortKey === 'date' || action.sortKey === 'total_gir') {\n          return { ...state, reverseSort: true, sortKey: action.sortKey };\n        } else {\n          return { ...state, reverseSort: false, sortKey: action.sortKey };\n        }\n      }\n\n    case 'TOGGLE_SORT_ORDER':\n      return { ...state, reverseSort: !state.reverseSort };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { StatsStateType } from '../types/stats';\n\nexport const stats: Reducer = (\n  state: StatsStateType = {\n    statsLoaded: false,\n    selectedSeason: 2046,\n    data: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_STATS':\n      return { ...state, statsLoaded: true, data: { ...action.data } };\n\n    case 'SELECT_SEASON':\n      return {\n        ...state,\n        selectedSeason: action.season\n      };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { TokenStateType, TokenActionTypes } from '../types/auth';\n\nexport const token: Reducer = (\n  state: TokenStateType = '',\n  action: TokenActionTypes\n) => {\n  switch (action.type) {\n    case 'SET_TOKEN':\n      return action.token;\n\n    case 'CLEAR_TOKEN':\n      return '';\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { rootReducer } from './reducers';\n\nconst store = createStore(\n  persistReducer(\n    { key: 'golf-stats', storage, whitelist: ['token'] },\n    rootReducer\n  ),\n  applyMiddleware(thunk)\n);\n\nconst persistor = persistStore(store);\n\n// persistor.purge();\n\nexport const ReduxProvider = ({ children }: { children: any }) => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      {children}\n    </PersistGate>\n  </Provider>\n);\n","import axios from 'axios';\n\nimport { Token } from '../types/auth';\n\nconst tokenConfig = (token: Token) => ({\n  headers: {\n    'Authorization': token // prettier-ignore\n  }\n});\n\nexport const getToken = (username: string, password: string) =>\n  axios.post('/api/get_token', { username, password });\n\nexport const validateToken = (token: Token) =>\n  axios.post('/api/is_token_valid', { token });\n\nexport const getData = (url: string, token: Token) =>\n  axios.get(url, tokenConfig(token));\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport jwtDecode from 'jwt-decode';\n\nimport { AppStateType } from '../types';\nimport { DecodedToken } from '../types/auth';\nimport { getToken, validateToken } from '../utils/httpFunctions';\n\nexport const checkToken: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => (dispatch, getState) =>\n  validateToken(getState().token)\n    .then(response => response.data)\n    .then(response => {\n      if (response) {\n        const username = jwtDecode<DecodedToken>(getState().token)['username'];\n        return dispatch({ type: 'LOGIN_SUCCESS', username });\n      } else {\n        dispatch({ type: 'CLEAR_TOKEN' });\n        return dispatch({ type: 'LOGIN_FAILURE', error: 'Invalid token' });\n      }\n    })\n    .catch(() => dispatch({ type: 'LOGIN_FAILURE', error: 'Invalid token' }));\n\nexport const login: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = (username: string, password: string) => dispatch =>\n  getToken(username, password)\n    .then(response => response.data)\n    .then(response => {\n      dispatch({ type: 'SET_TOKEN', token: response.token });\n      return dispatch({ type: 'LOGIN_SUCCESS', username });\n    })\n    .catch(() =>\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        error: 'Invalid username or password'\n      })\n    );\n\nexport const logout: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => dispatch => {\n  dispatch({ type: 'CLEAR_TOKEN' });\n  return dispatch({ type: 'LOGOUT' });\n};\n","import React from 'react';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { login } from '../actions/auth';\nimport { AppStateType } from '../types';\n\nconst styles = {\n  loginContainer: {\n    width: '190px',\n    margin: '20% 0 0 20%'\n  },\n  rowContainer: {\n    marginBottom: '20px'\n  }\n};\n\ninterface PropTypes {\n  statusText: string;\n  login: Function;\n}\n\nexport class LoginComponent extends React.Component<PropTypes> {\n  state = { username: '', password: '' };\n\n  handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) this.login();\n  };\n\n  login = () => {\n    this.props.login(this.state.username, this.state.password);\n  };\n\n  render = () => (\n    <div style={styles.loginContainer} onKeyDown={this.handleKeyPress}>\n      <h2>welcome</h2>\n      <h5>{this.props.statusText}</h5>\n      <div style={styles.rowContainer}>\n        <TextField\n          label=\"username\"\n          value={this.state.username}\n          placeholder=\"name\"\n          onChange={event => this.setState({ username: event.target.value })}\n        />\n      </div>\n      <div style={styles.rowContainer}>\n        <TextField\n          label=\"password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          value={this.state.password}\n          placeholder=\"password\"\n          onChange={event => this.setState({ password: event.target.value })}\n        />\n      </div>\n\n      <div style={styles.rowContainer}>\n        <Button\n          variant=\"outlined\"\n          style={{ marginTop: '10px' }}\n          onClick={this.login}\n        >\n          login\n        </Button>\n        <Button\n          variant=\"outlined\"\n          style={{ marginLeft: '10px', marginTop: '10px' }}\n          onClick={() => {}}\n        >\n          register\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  statusText: state.auth.statusText\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  login: (username: string, password: string) =>\n    dispatch(login(username, password))\n});\n\nexport const Login = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginComponent);\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst renderItem = (value: string, key: string, onClick: Function) => (\n  <TableCell\n    align={value === 'date' || value === 'course' ? 'left' : 'right'}\n    onClick={() => onClick(key)}\n  >\n    {value}\n  </TableCell>\n);\n\nexport const RoundsHeader: React.FC<{ onClick: Function }> = ({ onClick }) => (\n  <TableHead style={{ cursor: 'pointer' }}>\n    <TableRow>\n      {renderItem('date', 'date', onClick)}\n      {renderItem('course', 'course', onClick)}\n      {renderItem('score', 'total_strokes', onClick)}\n      {renderItem('front', 'front_9_strokes', onClick)}\n      {renderItem('back', 'back_9_strokes', onClick)}\n      {renderItem('putts', 'total_putts', onClick)}\n      {renderItem('girs', 'total_gir', onClick)}\n      {renderItem('hdcp', 'handicap_index', onClick)}\n    </TableRow>\n  </TableHead>\n);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { showRoundDialog } from '../../../actions/rounds';\n\nimport { AppStateType } from '../../../types';\nimport { RoundsType } from '../../../types/rounds';\n\ninterface PropTypes {\n  rounds: RoundsType;\n  sortKey: string;\n  reverseSort: boolean;\n  selectedSeason: number;\n  showRoundDialog: Function;\n}\n\nconst RoundsListComponent: React.FC<PropTypes> = props => (\n  <TableBody>\n    {Object.keys(props.rounds)\n      .map(k => parseInt(k))\n      .filter(\n        key =>\n          props.selectedSeason === 2046 ||\n          props.rounds[key].date.split('-')[0] === '' + props.selectedSeason\n      )\n      .sort((a, b) => {\n        if (props.sortKey === 'date') {\n          return moment(props.rounds[props.reverseSort ? b : a]['date']).diff(\n            moment(props.rounds[props.reverseSort ? a : b]['date'])\n          );\n        } else {\n          const first = props.rounds[props.reverseSort ? b : a][props.sortKey];\n          const second = props.rounds[props.reverseSort ? a : b][props.sortKey];\n          return first > second ? 1 : -1;\n        }\n      })\n      .map(key => {\n        const round = props.rounds[key];\n\n        return (\n          <TableRow\n            key={key}\n            onClick={() => props.showRoundDialog(key)}\n            style={{ cursor: 'pointer' }}\n          >\n            <TableCell>{round['date'].split(' ')[0]}</TableCell>\n            <TableCell>{round['course']}</TableCell>\n            <TableCell align=\"right\">{round['total_strokes']}</TableCell>\n            <TableCell align=\"right\">{round['front_9_strokes']}</TableCell>\n            <TableCell align=\"right\">{round['back_9_strokes']}</TableCell>\n            <TableCell align=\"right\">{round['total_putts']}</TableCell>\n            <TableCell align=\"right\">{round['total_gir']}</TableCell>\n            <TableCell align=\"right\">{round['handicap_index']}</TableCell>\n          </TableRow>\n        );\n      })}\n  </TableBody>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  rounds: state.rounds.data,\n  sortKey: state.rounds.sortKey,\n  reverseSort: state.rounds.reverseSort,\n  selectedSeason: state.stats.selectedSeason\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  showRoundDialog: (roundIndex: number) => dispatch(showRoundDialog(roundIndex))\n});\n\nexport const RoundsList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoundsListComponent);\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getData } from '../utils/httpFunctions';\n\nexport const addRounds: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => (dispatch, getState) =>\n  getData('/api/user/rounds', getState().token)\n    .then(response => response.data)\n    .then(data => dispatch({ type: 'ADD_ROUNDS', data }))\n    .catch(() => console.log('failed to get rounds'));\n\nexport const showRoundDialog: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = (roundIndex: number) => (dispatch, getState) => {\n  dispatch({ type: 'SHOW_ROUND_DIALOG', roundIndex });\n\n  const rounds = getState().rounds.data;\n\n  if (!rounds[roundIndex].roundData) {\n    return getData('/api/round/' + rounds[roundIndex].id, getState().token)\n      .then(response => response.data)\n      .then(data => dispatch({ type: 'ADD_ROUND_DATA', roundIndex, data }))\n      .catch(() => console.log('failed to get round data'));\n  } else {\n    return dispatch({ type: 'SET_SELECTED_ROUND_IS_LOADED' });\n  }\n};\n\nexport const hideRoundDialog: ActionCreator<AnyAction> = () => ({\n  type: 'HIDE_ROUND_DIALOG'\n});\n\nexport const setSortKey: ActionCreator<AnyAction> = (sortKey: string) => ({\n  type: 'SET_SORT_KEY',\n  sortKey\n});\n\nexport const toggleSortOrder: ActionCreator<AnyAction> = () => ({\n  type: 'TOGGLE_SORT_ORDER'\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { hideRoundDialog } from '../../../../actions/rounds';\n\nimport { AppStateType } from '../../../../types';\nimport { Round } from '../../../../types/rounds';\n\nconst nineHoleArray = (func: Function) =>\n  Array.from({ length: 9 }, (v, i) => func(v, i));\n\ninterface PropTypes {\n  selectedRoundIsLoaded: boolean;\n  round: Round;\n}\n\nexport const SelectedRoundTableComponent: React.FC<PropTypes> = ({\n  selectedRoundIsLoaded,\n  round\n}) => {\n  if (!selectedRoundIsLoaded) {\n    return (\n      <div style={{ padding: '20px' }}>\n        <h5>loading round data...</h5>\n      </div>\n    );\n  } else {\n    console.log(round);\n\n    const roundData = round.roundData;\n    const nineHoleTotal = (startHole: number, stat: string) =>\n      nineHoleArray(\n        (_: any, i: number) => roundData['holes'][i + startHole][stat]\n      ).reduce((total: number, hole: number) => total + hole);\n\n    roundData['front_9_par'] = nineHoleTotal(1, 'par');\n    roundData['back_9_par'] = nineHoleTotal(10, 'par');\n    roundData['total_par'] = roundData['front_9_par'] + roundData['back_9_par'];\n\n    const holeStat = (holeNumber: number, stat: string) =>\n      stat === 'gir'\n        ? roundData['holes'][holeNumber]['gir']\n          ? '*'\n          : ''\n        : roundData['holes'][holeNumber][stat];\n\n    const renderHoles = (startHole: number, stat: string) =>\n      nineHoleArray((_: any, i: number) => (\n        <TableCell\n          align=\"right\"\n          style={{ padding: '6px' }}\n          key={stat + '_' + (i + startHole)}\n        >\n          {holeStat(i + startHole, stat)}\n        </TableCell>\n      ));\n\n    const renderTableRow = (label: string, stat: string) => (\n      <TableRow>\n        <TableCell style={{ padding: '8px' }}>{label}:</TableCell>\n        {renderHoles(1, stat)}\n        <TableCell align=\"right\" style={{ padding: '8px' }}>{roundData['front_9_' + stat]}</TableCell>\n        {renderHoles(10, stat)}\n        <TableCell align=\"right\" style={{ padding: '8px' }}>{roundData['back_9_' + stat]}</TableCell>\n        <TableCell align=\"right\" style={{ padding: '8px' }}>{roundData['total_' + stat]}</TableCell>\n      </TableRow>\n    );\n\n    return (\n      <Table padding=\"dense\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ padding: '8px' }}>hole:</TableCell>\n            {nineHoleArray((_: any, i: number) => (\n              <TableCell\n                align=\"right\"\n                style={{ padding: '6px' }}\n                key={'hole_' + (i + 1)}\n              >\n                {i + 1}\n              </TableCell>\n            ))}\n            <TableCell align=\"right\" style={{ padding: '8px' }}>front</TableCell>\n            {nineHoleArray((_: any, i: number) => (\n              <TableCell\n                align=\"right\"\n                style={{ padding: '6px' }}\n                key={'hole_' + (i + 10)}\n              >\n                {i + 10}\n              </TableCell>\n            ))}\n            <TableCell align=\"right\" style={{ padding: '8px' }}>back</TableCell>\n            <TableCell align=\"right\" style={{ padding: '8px' }}>total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderTableRow('par', 'par')}\n          {renderTableRow('score', 'strokes')}\n          {renderTableRow('putts', 'putts')}\n          {renderTableRow('gir', 'gir')}\n        </TableBody>\n      </Table>\n    );\n  }\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  selectedRoundIsLoaded: state.rounds.selectedRoundIsLoaded,\n  round: state.rounds.data[state.rounds.selectedRoundIndex]\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  hideRoundDialog: () => dispatch(hideRoundDialog())\n});\n\nexport const SelectedRoundTable = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedRoundTableComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { hideRoundDialog } from '../../../../actions/rounds';\n\nimport { AppStateType } from '../../../../types';\nimport { Round } from '../../../../types/rounds';\n\nimport { SelectedRoundTable } from './SelectedRoundTable';\n\ninterface PropTypes {\n  showRoundDialog: boolean;\n  round: Round;\n  hideRoundDialog: Function;\n}\n\nexport const SelectedRoundComponent: React.FC<PropTypes> = ({\n  showRoundDialog,\n  round,\n  hideRoundDialog\n}) => (\n  <Dialog\n    open={showRoundDialog}\n    onClose={event => hideRoundDialog()}\n    maxWidth=\"md\"\n    fullWidth={true}\n  >\n    <DialogTitle>{round ? round.date.split(' ')[0] : ''}</DialogTitle>\n    <DialogContent>\n      <SelectedRoundTable />\n    </DialogContent>\n    <DialogActions>\n      <Button\n        variant=\"outlined\"\n        style={{ marginTop: '10px' }}\n        onClick={event => hideRoundDialog()}\n      >\n        close\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  showRoundDialog: state.rounds.showRoundDialog,\n  round: state.rounds.data[state.rounds.selectedRoundIndex]\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  hideRoundDialog: () => dispatch(hideRoundDialog())\n});\n\nexport const SelectedRound = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedRoundComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Table from '@material-ui/core/Table';\n\nimport { setSortKey } from '../../../actions/rounds';\n\nimport { AppStateType } from '../../../types';\n\nimport { RoundsHeader } from './RoundsHeader';\nimport { RoundsList } from './RoundsList';\n\nimport { SelectedRound } from './SelectedRound';\n\ninterface PropTypes {\n  roundsLoaded: boolean;\n  setSortKey: Function;\n}\n\nexport const RoundsComponent: React.FC<PropTypes> = ({\n  roundsLoaded,\n  setSortKey\n}) => (\n  <div style={{ marginTop: '40px', marginBottom: '50px' }}>\n    <h2>rounds</h2>\n    {!roundsLoaded ? (\n      <div style={{ padding: '10px' }}>\n        <h5>loading rounds...</h5>\n      </div>\n    ) : (\n      <Table padding=\"dense\" style={{ marginTop: '-10px' }}>\n        <RoundsHeader onClick={setSortKey} />\n        <RoundsList />\n      </Table>\n    )}\n    <SelectedRound />\n  </div>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n  roundsLoaded: state.rounds.roundsLoaded\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  setSortKey: (key: string) => dispatch(setSortKey(key))\n});\n\nexport const Rounds = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoundsComponent);\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\ninterface PropTypes {\n  seasons: Array<number>;\n  onClick: Function;\n}\n\nexport const StatsHeader: React.FC<PropTypes> = ({ seasons, onClick }) => (\n  <TableHead>\n    <TableRow>\n      <TableCell>season:</TableCell>\n      {seasons.map(season => (\n        <TableCell\n          align=\"right\"\n          key={season}\n          onClick={() => onClick(season)}\n          style={{ cursor: 'pointer' }}\n        >\n          {season === 2046 ? 'overall' : season}\n        </TableCell>\n      ))}\n    </TableRow>\n  </TableHead>\n);\n","import React from 'react';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { StatsType } from '../../../types/stats';\n\ntype StatKeysType = { [stat: string]: string };\n\nconst statKeys: StatKeysType = {\n  strokes: 'scoring average',\n  putts: 'putts per round',\n  gir: 'greens per round',\n  handicap: 'handicap',\n  par3: 'par 3 average',\n  par4: 'par 4 average',\n  par5: 'par 5 average'\n};\n\ninterface PropTypes {\n  seasons: Array<number>;\n  stats: StatsType;\n  onClick: Function;\n}\n\nexport const StatsList: React.FC<PropTypes> = ({ seasons, stats, onClick }) => (\n  <TableBody>\n    {Object.keys(statKeys).map(stat => (\n      <TableRow key={stat}>\n        <TableCell>{statKeys[stat]}:</TableCell>\n        {seasons.map(season => (\n          <TableCell\n            align=\"right\"\n            key={season + '-' + stat}\n            onClick={() => onClick(season)}\n            style={{ cursor: 'pointer' }}\n          >\n            {stats[season][stat]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))}\n  </TableBody>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Table from '@material-ui/core/Table';\n\nimport { selectSeason } from '../../../actions/stats';\n\nimport { AppStateType } from '../../../types';\nimport { StatsType } from '../../../types/stats';\n\nimport { StatsHeader } from './StatsHeader';\nimport { StatsList } from './StatsList';\n\ninterface PropTypes {\n  statsLoaded: boolean;\n  stats: StatsType;\n  selectSeason: Function;\n}\n\nexport const StatsComponent: React.FC<PropTypes> = ({\n  statsLoaded,\n  stats,\n  selectSeason\n}) => {\n  const seasons = Object.keys(stats)\n    .map(s => parseInt(s))\n    .sort()\n    .reverse();\n\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <h2>statistics</h2>\n      {!statsLoaded ? (\n        <div style={{ padding: '10px' }}>\n          <h5>loading stats...</h5>\n        </div>\n      ) : (\n        <Table style={{ marginTop: '-10px' }}>\n          <StatsHeader seasons={seasons} onClick={selectSeason} />\n          <StatsList seasons={seasons} stats={stats} onClick={selectSeason} />\n        </Table>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  statsLoaded: state.stats.statsLoaded,\n  stats: state.stats.data\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  selectSeason: (season: number) => dispatch(selectSeason(season))\n});\n\nexport const Stats = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StatsComponent);\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getData } from '../utils/httpFunctions';\n\nexport const addStats: ActionCreator<\n  ThunkAction<void, AppStateType, null, AnyAction>\n> = () => (dispatch, getState) =>\n  getData('/api/user/stats', getState().token)\n    .then(response => response.data)\n    .then(data => dispatch({ type: 'ADD_STATS', data }))\n    .catch(() => console.log('failed to get stats'));\n\nexport const selectSeason: ActionCreator<AnyAction> = (season: string) => ({\n  type: 'SELECT_SEASON',\n  season\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { addRounds } from '../../actions/rounds';\nimport { addStats } from '../../actions/stats';\n\nimport { AppStateType } from '../../types';\nimport { StatsType } from '../../types/stats';\nimport { RoundsType } from '../../types/rounds';\n\nimport { Rounds } from './Rounds';\nimport { Stats } from './Stats';\n\nconst styles = {\n  mainContainer: {\n    maxWidth: '720px',\n    minWidth: '480px',\n    margin: 'auto'\n  },\n  headerRow: {\n    marginTop: '20px'\n    // display: 'flex',\n    // justifyContent: 'center'\n  }\n};\n\ninterface PropTypes {\n  username: string;\n  stats: StatsType;\n  rounds: RoundsType;\n  addStats: Function;\n  addRounds: Function;\n}\n\nclass MainComponent extends React.Component<PropTypes> {\n  componentDidMount = () => {\n    if (!this.props.stats[2046]) {\n      console.log('getting stats');\n      this.props.addStats();\n    }\n    if (!this.props.rounds[0]) {\n      console.log('getting rounds');\n      this.props.addRounds();\n    }\n  };\n\n  render = () => (\n    <div style={styles.mainContainer}>\n      <div style={styles.headerRow}>\n        <h1>hello {this.props.username}</h1>\n      </div>\n      <Stats />\n      <Rounds />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  username: state.auth.username,\n  rounds: state.rounds.data,\n  stats: state.stats.data\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  addRounds: () => dispatch(addRounds()),\n  addStats: () => dispatch(addStats())\n});\n\nexport const Main = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { checkToken } from './actions/auth';\n\nimport { AppStateType } from './types';\nimport { Token } from './types/auth';\n\nimport { Login } from './screens/Login';\nimport { Main } from './screens/Main';\n\ntype PropTypes = {\n  token: Token;\n  isAuthenticated: boolean;\n  authenticationFailed: boolean;\n  checkToken: Function;\n};\n\nconst AppComponent: React.FC<PropTypes> = ({\n  token,\n  isAuthenticated,\n  authenticationFailed,\n  checkToken\n}) => {\n  if (token && isAuthenticated) {\n    return <Main />;\n  } else if (!token || authenticationFailed) {\n    return <Login />;\n  } else {\n    checkToken();\n    return (\n      <div>\n        <p>authenticating...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n  token: state.token,\n  isAuthenticated: state.auth.isAuthenticated,\n  authenticationFailed: state.auth.authenticationFailed\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n  checkToken: () => dispatch(checkToken())\n});\n\nexport const App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppComponent);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ReduxProvider } from './store';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <ReduxProvider>\n    <App />\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}