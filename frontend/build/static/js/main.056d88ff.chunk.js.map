{"version":3,"sources":["store/index.tsx","store/auth/reducer.ts","store/rounds/reducer.ts","store/stats/reducer.ts","utils/httpFunctions.ts","store/auth/actions.ts","screens/Login.tsx","screens/Main/Rounds/styles.ts","screens/Main/Rounds/RoundsHeader.tsx","store/rounds/actions.ts","screens/Main/Rounds/RoundsList.tsx","screens/Main/Rounds/SelectedRound/SelectedRoundTable.tsx","screens/Main/Rounds/SelectedRound/index.tsx","screens/Main/Rounds/index.tsx","screens/Main/Stats/styles.ts","screens/Main/Stats/StatsHeader.tsx","screens/Main/Stats/StatsList.tsx","screens/Main/Stats/index.tsx","store/stats/actions.ts","screens/Main/index.tsx","App.tsx","index.tsx"],"names":["rootReducer","combineReducers","auth","state","arguments","length","undefined","isAuthenticated","authenticationFailed","statusText","username","token","action","type","concat","error","rounds","roundsLoaded","sortKey","reverseSort","selectedRoundIndex","selectedRoundIsLoaded","showRoundDialog","data","Object","objectSpread2","defineProperty","roundIndex","roundData","stats","statsLoaded","selectedSeason","season","store","createStore","persistReducer","key","storage","whitelist","applyMiddleware","thunk","persistor","persistStore","ReduxProvider","_ref","children","react_default","a","createElement","react_redux_es","integration_react","loading","getData","url","axios","get","headers","Authorization","tokenConfig","checkToken","dispatch","getState","post","then","response","jwtDecode","catch","login","password","getToken","styles","loginContainer","width","margin","paddingTop","paddingRight","rowContainer","marginBottom","LoginComponent","_React$Component","inherits","_super","createSuper","_this","classCallCheck","this","_len","args","Array","_key","call","apply","handleKeyPress","event","keyCode","props","render","style","onKeyDown","TextField_default","label","value","placeholder","onChange","setState","target","autoComplete","Button_default","variant","marginTop","onClick","marginLeft","React","Component","Login","connect","dateCell","minWidth","maxWidth","padding","courseCell","paddingLeft","narrowCell","RoundsHeader","setSortKey","renderItem","TableCell_default","align","TableSortLabel_default","active","direction","TableHead_default","TableRow_default","RoundsList","id","console","log","TableBody_default","keys","map","k","parseInt","filter","date","split","sort","b","moment","diff","round","cursor","hover","nineHoleArray","func","from","v","i","SelectedRoundTable","hideRoundDialog","nineHoleTotal","startHole","stat","_","reduce","total","hole","renderHoles","holeNumber","holeStat","renderTableRow","Table_default","SelectedRound","Dialog_default","open","onClose","fullWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Rounds","seasonHeaderCell","headerCell","seasonCell","selectedSeasonCell","backgroundColor","selectedCell","regularCell","StatsHeader","seasons","statKeys","StatsList","Stats","selectSeason","s","reverse","StatsHeader_StatsHeader","StatsList_StatsList","mainContainer","headerRow","MainComponent","componentDidMount","addStats","addRounds","Main","App","ReactDOM","store_ReduxProvider","document","getElementById"],"mappings":"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","file":"static/js/main.056d88ff.chunk.js","sourcesContent":["import React from 'react';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { auth } from './auth/reducer';\nimport { rounds } from './rounds/reducer';\nimport { stats } from './stats/reducer';\n\nconst rootReducer = combineReducers({ auth, rounds, stats });\n\nconst store = createStore(\n\tpersistReducer(\n\t\t{ key: 'golf-stats', storage, whitelist: ['auth'] },\n\t\trootReducer\n\t),\n\tapplyMiddleware(thunk)\n);\n\nconst persistor = persistStore(store);\n\n// persistor.purge();\n\nexport const ReduxProvider = ({ children }: { children: any }) => (\n\t<Provider store={store}>\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t{children}\n\t\t</PersistGate>\n\t</Provider>\n);\n","import { Reducer } from 'redux';\n\nimport { AuthStateType, AuthActionTypes } from './types';\n\nexport const auth: Reducer = (\n\tstate: AuthStateType = {\n\t\tisAuthenticated: false,\n\t\tauthenticationFailed: false,\n\t\tstatusText: 'Please log in',\n\t\tusername: '',\n\t\ttoken: ''\n\t},\n\taction: AuthActionTypes\n) => {\n\tswitch (action.type) {\n\t\tcase 'LOGIN_SUCCESS':\n\t\t\treturn {\n\t\t\t\tisAuthenticated: true,\n\t\t\t\tauthenticationFailed: false,\n\t\t\t\tstatusText: 'You are logged in',\n\t\t\t\tusername: action.username,\n\t\t\t\ttoken: action.token\n\t\t\t};\n\n\t\tcase 'LOGIN_FAILURE':\n\t\t\treturn {\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tauthenticationFailed: true,\n\t\t\t\tstatusText: `Error: ${action.error}`,\n\t\t\t\ttoken: ''\n\t\t\t};\n\n\t\tcase 'LOGOUT':\n\t\t\treturn {\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tauthenticationFailed: false,\n\t\t\t\tstatusText: 'Please log in',\n\t\t\t\ttoken: ''\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { Reducer } from 'redux';\n\nimport { RoundsStateType } from './types';\n\nexport const rounds: Reducer = (\n\tstate: RoundsStateType = {\n\t\troundsLoaded: false,\n\t\tsortKey: 'date',\n\t\treverseSort: true,\n\t\tselectedRoundIndex: 0,\n\t\tselectedRoundIsLoaded: false,\n\t\tshowRoundDialog: false,\n\t\tdata: {}\n\t},\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase 'ADD_ROUNDS':\n\t\t\treturn { ...state, roundsLoaded: true, data: { ...action.data } };\n\n\t\tcase 'ADD_ROUND_DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedRoundIsLoaded: true,\n\t\t\t\tdata: {\n\t\t\t\t\t...state.data,\n\t\t\t\t\t[action.roundIndex]: {\n\t\t\t\t\t\t...state.data[action.roundIndex],\n\t\t\t\t\t\troundData: { ...action.data }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase 'SET_SELECTED_ROUND_IS_LOADED':\n\t\t\treturn { ...state, selectedRoundIsLoaded: true };\n\n\t\tcase 'SHOW_ROUND_DIALOG':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshowRoundDialog: true,\n\t\t\t\tselectedRoundIndex: action.roundIndex,\n\t\t\t\tselectedRoundIsLoaded: false\n\t\t\t};\n\n\t\tcase 'HIDE_ROUND_DIALOG':\n\t\t\treturn { ...state, showRoundDialog: false };\n\n\t\tcase 'SET_SORT_KEY':\n\t\t\tif (action.sortKey === state.sortKey) {\n\t\t\t\treturn { ...state, reverseSort: !state.reverseSort };\n\t\t\t} else {\n\t\t\t\tif (action.sortKey === 'date' || action.sortKey === 'total_gir') {\n\t\t\t\t\treturn { ...state, reverseSort: true, sortKey: action.sortKey };\n\t\t\t\t} else {\n\t\t\t\t\treturn { ...state, reverseSort: false, sortKey: action.sortKey };\n\t\t\t\t}\n\t\t\t}\n\n\t\tcase 'TOGGLE_SORT_ORDER':\n\t\t\treturn { ...state, reverseSort: !state.reverseSort };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { Reducer } from 'redux';\n\nimport { StatsStateType } from './types';\n\nexport const stats: Reducer = (\n\tstate: StatsStateType = {\n\t\tstatsLoaded: false,\n\t\tselectedSeason: 2046,\n\t\tdata: {}\n\t},\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase 'ADD_STATS':\n\t\t\treturn { ...state, statsLoaded: true, data: { ...action.data } };\n\n\t\tcase 'SELECT_SEASON':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedSeason: action.season\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import axios from 'axios';\n\nconst tokenConfig = (token: string) => ({\n\theaders: {\n\t\t'Authorization': token // prettier-ignore\n\t}\n});\n\nexport const getToken = (username: string, password: string) =>\n\taxios.post('/api/get_token', { username, password });\n\nexport const validateToken = (token: string) =>\n\taxios.post('/api/is_token_valid', { token });\n\nexport const getData = (url: string, token: string) =>\n\taxios.get(url, tokenConfig(token));\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport jwtDecode from 'jwt-decode';\n\nimport { AppStateType } from '../types';\nimport { DecodedTokenType } from './types';\nimport { getToken, validateToken } from '../../utils/httpFunctions';\n\nexport const checkToken: ActionCreator<ThunkAction<\n\tvoid,\n\tAppStateType,\n\tnull,\n\tAnyAction\n>> = () => (dispatch, getState) =>\n\tvalidateToken(getState().auth.token)\n\t\t.then((response) => response.data)\n\t\t.then((response) => {\n\t\t\tif (response) {\n\t\t\t\tconst username = jwtDecode<DecodedTokenType>(getState().auth.token)[\n\t\t\t\t\t'username'\n\t\t\t\t];\n\t\t\t\treturn dispatch({ type: 'LOGIN_SUCCESS', username });\n\t\t\t} else {\n\t\t\t\treturn dispatch({ type: 'LOGIN_FAILURE', error: 'Invalid token' });\n\t\t\t}\n\t\t})\n\t\t.catch(() => dispatch({ type: 'LOGIN_FAILURE', error: 'Invalid token' }));\n\nexport const login: ActionCreator<ThunkAction<\n\tvoid,\n\tAppStateType,\n\tnull,\n\tAnyAction\n>> = (username: string, password: string) => (dispatch) =>\n\tgetToken(username, password)\n\t\t.then((response) => response.data)\n\t\t.then((response) => {\n\t\t\treturn dispatch({\n\t\t\t\ttype: 'LOGIN_SUCCESS',\n\t\t\t\tusername,\n\t\t\t\ttoken: response.token\n\t\t\t});\n\t\t})\n\t\t.catch(() =>\n\t\t\tdispatch({\n\t\t\t\ttype: 'LOGIN_FAILURE',\n\t\t\t\terror: 'Invalid username or password'\n\t\t\t})\n\t\t);\n\nexport const logout: ActionCreator<AnyAction> = () => ({ type: 'LOGOUT' });\n","import React from 'react';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { login } from '../store/auth/actions';\nimport { AppStateType } from '../store/types';\n\nconst styles = {\n\tloginContainer: {\n\t\twidth: '200px',\n\t\tmargin: 'auto',\n\t\tpaddingTop: '10%',\n\t\tpaddingRight: '10%'\n\t},\n\trowContainer: {\n\t\tmarginBottom: '20px'\n\t}\n};\n\ninterface PropTypes {\n\tstatusText: string;\n\tlogin: Function;\n}\n\nexport class LoginComponent extends React.Component<PropTypes> {\n\tstate = { username: '', password: '' };\n\n\thandleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (event.keyCode === 13) this.login();\n\t};\n\n\tlogin = () => {\n\t\tthis.props.login(this.state.username, this.state.password);\n\t};\n\n\trender = () => (\n\t\t<div style={styles.loginContainer} onKeyDown={this.handleKeyPress}>\n\t\t\t<h2>welcome</h2>\n\t\t\t<h5>{this.props.statusText}</h5>\n\t\t\t<div style={styles.rowContainer}>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"username\"\n\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\tplaceholder=\"name\"\n\t\t\t\t\tonChange={(event) => this.setState({ username: event.target.value })}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div style={styles.rowContainer}>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\tonChange={(event) => this.setState({ password: event.target.value })}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div style={styles.rowContainer}>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tstyle={{ marginTop: '10px' }}\n\t\t\t\t\tonClick={this.login}\n\t\t\t\t>\n\t\t\t\t\tlogin\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tstyle={{ marginLeft: '10px', marginTop: '10px' }}\n\t\t\t\t\tonClick={() => {}}\n\t\t\t\t>\n\t\t\t\t\tregister\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tstatusText: state.auth.statusText\n});\n\nconst mapDispatchToProps = (\n\tdispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n\tlogin: (username: string, password: string) =>\n\t\tdispatch(login(username, password))\n});\n\nexport const Login = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(LoginComponent);\n","export const styles = {\n\tdateCell: { minWidth: '80px', maxWidth: '80px', padding: '8px' },\n\tcourseCell: { padding: '8px', paddingLeft: '30px' },\n\tnarrowCell: { padding: '8px' }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport { setSortKey } from '../../../store/rounds/actions';\n\nimport { AppStateType } from '../../../store/types';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n\tsortKey: string;\n\treverseSort: boolean;\n\tsetSortKey: Function;\n}\n\nexport const RoundsHeaderComponent: React.FC<PropTypes> = ({\n\tsortKey,\n\treverseSort,\n\tsetSortKey\n}) => {\n\tconst renderItem = (value: string, key: string) => (\n\t\t<TableCell\n\t\t\talign={value === 'date' || value === 'course' ? 'left' : 'right'}\n\t\t\tstyle={\n\t\t\t\tvalue === 'date'\n\t\t\t\t\t? styles.dateCell\n\t\t\t\t\t: value === 'course'\n\t\t\t\t\t? styles.courseCell\n\t\t\t\t\t: styles.narrowCell\n\t\t\t}\n\t\t>\n\t\t\t<TableSortLabel\n\t\t\t\tactive={sortKey === key}\n\t\t\t\tdirection={reverseSort ? 'desc' : 'asc'}\n\t\t\t\tonClick={() => setSortKey(key)}\n\t\t\t>\n\t\t\t\t{value}\n\t\t\t</TableSortLabel>\n\t\t</TableCell>\n\t);\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t{renderItem('date', 'date')}\n\t\t\t\t{renderItem('course', 'course')}\n\t\t\t\t{renderItem('score', 'total_strokes')}\n\t\t\t\t{renderItem('front', 'front_9_strokes')}\n\t\t\t\t{renderItem('back', 'back_9_strokes')}\n\t\t\t\t{renderItem('putts', 'total_putts')}\n\t\t\t\t{renderItem('girs', 'total_gir')}\n\t\t\t\t{renderItem('hdcp', 'handicap_index')}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tsortKey: state.rounds.sortKey,\n\treverseSort: state.rounds.reverseSort\n});\n\nconst mapDispatchToProps = (\n\tdispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n\tsetSortKey: (key: string) => dispatch(setSortKey(key))\n});\n\nexport const RoundsHeader = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(RoundsHeaderComponent);\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { getData } from '../../utils/httpFunctions';\nimport { checkToken } from '../auth/actions';\n\nexport const addRounds: ActionCreator<ThunkAction<\n\tvoid,\n\tAppStateType,\n\tnull,\n\tAnyAction\n>> = () => (dispatch, getState) =>\n\tgetData('/api/user/rounds', getState().auth.token)\n\t\t.then((response) => response.data)\n\t\t.then((data) => dispatch({ type: 'ADD_ROUNDS', data }))\n\t\t.catch(() => console.log('failed to get rounds'));\n\nexport const showRoundDialog: ActionCreator<ThunkAction<\n\tvoid,\n\tAppStateType,\n\tnull,\n\tAnyAction\n>> = (roundIndex: number) => (dispatch, getState) => {\n\tdispatch({ type: 'SHOW_ROUND_DIALOG', roundIndex });\n\n\tconst rounds = getState().rounds.data;\n\n\tif (!rounds[roundIndex].roundData) {\n\t\treturn getData('/api/round/' + rounds[roundIndex].id, getState().auth.token)\n\t\t\t.then((response) => response.data)\n\t\t\t.then((data) => dispatch({ type: 'ADD_ROUND_DATA', roundIndex, data }))\n\t\t\t.catch(() => {\n\t\t\t\tconsole.log('failed to get round data');\n\t\t\t\tdispatch(checkToken());\n\t\t\t});\n\t} else {\n\t\treturn dispatch({ type: 'SET_SELECTED_ROUND_IS_LOADED' });\n\t}\n};\n\nexport const hideRoundDialog: ActionCreator<AnyAction> = () => ({\n\ttype: 'HIDE_ROUND_DIALOG'\n});\n\nexport const setSortKey: ActionCreator<AnyAction> = (sortKey: string) => ({\n\ttype: 'SET_SORT_KEY',\n\tsortKey\n});\n\nexport const toggleSortOrder: ActionCreator<AnyAction> = () => ({\n\ttype: 'TOGGLE_SORT_ORDER'\n});\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { showRoundDialog } from '../../../store/rounds/actions';\n\nimport { AppStateType } from '../../../store/types';\nimport { RoundsType } from '../../../store/rounds/types';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n\trounds: RoundsType;\n\tsortKey: string;\n\treverseSort: boolean;\n\tselectedSeason: number;\n\tshowRoundDialog: Function;\n}\n\nconst RoundsListComponent: React.FC<PropTypes> = (props) => (\n\t<TableBody>\n\t\t{Object.keys(props.rounds)\n\t\t\t.map((k) => parseInt(k))\n\t\t\t.filter(\n\t\t\t\t(key) =>\n\t\t\t\t\tprops.selectedSeason === 2046 ||\n\t\t\t\t\tprops.rounds[key].date.split('-')[0] === '' + props.selectedSeason\n\t\t\t)\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (props.sortKey === 'date') {\n\t\t\t\t\treturn moment(props.rounds[props.reverseSort ? b : a]['date']).diff(\n\t\t\t\t\t\tmoment(props.rounds[props.reverseSort ? a : b]['date'])\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst first = props.rounds[props.reverseSort ? b : a][props.sortKey];\n\t\t\t\t\tconst second = props.rounds[props.reverseSort ? a : b][props.sortKey];\n\t\t\t\t\treturn first > second ? 1 : -1;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.map((key) => {\n\t\t\t\tconst round = props.rounds[key];\n\n\t\t\t\treturn (\n\t\t\t\t\t<TableRow\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\tonClick={() => props.showRoundDialog(key)}\n\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\thover\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableCell style={styles.dateCell}>\n\t\t\t\t\t\t\t{round['date'].split(' ')[0]}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell style={styles.courseCell}>{round['course']}</TableCell>\n\t\t\t\t\t\t<TableCell style={styles.narrowCell} align=\"right\">\n\t\t\t\t\t\t\t{round['total_strokes']}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell style={styles.narrowCell} align=\"right\">\n\t\t\t\t\t\t\t{round['front_9_strokes']}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell style={styles.narrowCell} align=\"right\">\n\t\t\t\t\t\t\t{round['back_9_strokes']}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell style={styles.narrowCell} align=\"right\">\n\t\t\t\t\t\t\t{round['total_putts']}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell style={styles.narrowCell} align=\"right\">\n\t\t\t\t\t\t\t{round['total_gir']}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell style={styles.narrowCell} align=\"right\">\n\t\t\t\t\t\t\t{round['handicap_index']}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t);\n\t\t\t})}\n\t</TableBody>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n\trounds: state.rounds.data,\n\tsortKey: state.rounds.sortKey,\n\treverseSort: state.rounds.reverseSort,\n\tselectedSeason: state.stats.selectedSeason\n});\n\nconst mapDispatchToProps = (\n\tdispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n\tshowRoundDialog: (roundIndex: number) => dispatch(showRoundDialog(roundIndex))\n});\n\nexport const RoundsList = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(RoundsListComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { hideRoundDialog } from '../../../../store/rounds/actions';\n\nimport { AppStateType } from '../../../../store/types';\nimport { Round } from '../../../../store/rounds/types';\n\nconst nineHoleArray = (func: Function) =>\n\tArray.from({ length: 9 }, (v, i) => func(v, i));\n\ninterface PropTypes {\n\tselectedRoundIsLoaded: boolean;\n\tround: Round;\n}\n\nexport const SelectedRoundTableComponent: React.FC<PropTypes> = ({\n\tselectedRoundIsLoaded,\n\tround\n}) => {\n\tif (!selectedRoundIsLoaded) {\n\t\treturn (\n\t\t\t<div style={{ padding: '20px' }}>\n\t\t\t\t<h5>loading round data...</h5>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tconst roundData = round.roundData;\n\t\tconst nineHoleTotal = (startHole: number, stat: string) =>\n\t\t\tnineHoleArray(\n\t\t\t\t(_: any, i: number) => roundData['holes'][i + startHole][stat]\n\t\t\t).reduce((total: number, hole: number) => total + hole);\n\n\t\troundData['front_9_par'] = nineHoleTotal(1, 'par');\n\t\troundData['back_9_par'] = nineHoleTotal(10, 'par');\n\t\troundData['total_par'] = roundData['front_9_par'] + roundData['back_9_par'];\n\n\t\tconst holeStat = (holeNumber: number, stat: string) =>\n\t\t\tstat === 'gir'\n\t\t\t\t? roundData['holes'][holeNumber]['gir']\n\t\t\t\t\t? '*'\n\t\t\t\t\t: ''\n\t\t\t\t: roundData['holes'][holeNumber][stat];\n\n\t\tconst renderHoles = (startHole: number, stat: string) =>\n\t\t\tnineHoleArray((_: any, i: number) => (\n\t\t\t\t<TableCell\n\t\t\t\t\talign=\"right\"\n\t\t\t\t\tstyle={{ padding: '6px' }}\n\t\t\t\t\tkey={stat + '_' + (i + startHole)}\n\t\t\t\t>\n\t\t\t\t\t{holeStat(i + startHole, stat)}\n\t\t\t\t</TableCell>\n\t\t\t));\n\n\t\tconst renderTableRow = (label: string, stat: string) => (\n\t\t\t<TableRow>\n\t\t\t\t<TableCell style={{ padding: '8px' }}>{label}:</TableCell>\n\t\t\t\t{renderHoles(1, stat)}\n\t\t\t\t<TableCell align=\"right\" style={{ padding: '8px' }}>\n\t\t\t\t\t{roundData['front_9_' + stat]}\n\t\t\t\t</TableCell>\n\t\t\t\t{renderHoles(10, stat)}\n\t\t\t\t<TableCell align=\"right\" style={{ padding: '8px' }}>\n\t\t\t\t\t{roundData['back_9_' + stat]}\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell align=\"right\" style={{ padding: '8px' }}>\n\t\t\t\t\t{roundData['total_' + stat]}\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t);\n\n\t\treturn (\n\t\t\t<Table padding=\"dense\">\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell style={{ padding: '8px' }}>hole:</TableCell>\n\t\t\t\t\t\t{nineHoleArray((_: any, i: number) => (\n\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\talign=\"right\"\n\t\t\t\t\t\t\t\tstyle={{ padding: '6px' }}\n\t\t\t\t\t\t\t\tkey={'hole_' + (i + 1)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<TableCell align=\"right\" style={{ padding: '8px' }}>\n\t\t\t\t\t\t\tfront\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t{nineHoleArray((_: any, i: number) => (\n\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\talign=\"right\"\n\t\t\t\t\t\t\t\tstyle={{ padding: '6px' }}\n\t\t\t\t\t\t\t\tkey={'hole_' + (i + 10)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{i + 10}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<TableCell align=\"right\" style={{ padding: '8px' }}>\n\t\t\t\t\t\t\tback\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\" style={{ padding: '8px' }}>\n\t\t\t\t\t\t\ttotal\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{renderTableRow('par', 'par')}\n\t\t\t\t\t{renderTableRow('score', 'strokes')}\n\t\t\t\t\t{renderTableRow('putts', 'putts')}\n\t\t\t\t\t{renderTableRow('gir', 'gir')}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t);\n\t}\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tselectedRoundIsLoaded: state.rounds.selectedRoundIsLoaded,\n\tround: state.rounds.data[state.rounds.selectedRoundIndex]\n});\n\nconst mapDispatchToProps = (\n\tdispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n\thideRoundDialog: () => dispatch(hideRoundDialog())\n});\n\nexport const SelectedRoundTable = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(SelectedRoundTableComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { hideRoundDialog } from '../../../../store/rounds/actions';\n\nimport { AppStateType } from '../../../../store/types';\nimport { Round } from '../../../../store/rounds/types';\n\nimport { SelectedRoundTable } from './SelectedRoundTable';\n\ninterface PropTypes {\n\tshowRoundDialog: boolean;\n\tround: Round;\n\thideRoundDialog: Function;\n}\n\nexport const SelectedRoundComponent: React.FC<PropTypes> = ({\n\tshowRoundDialog,\n\tround,\n\thideRoundDialog\n}) => (\n\t<Dialog\n\t\topen={showRoundDialog}\n\t\tonClose={(event) => hideRoundDialog()}\n\t\tmaxWidth=\"md\"\n\t\tfullWidth={true}\n\t>\n\t\t<DialogTitle>\n\t\t\t{round\n\t\t\t\t? round.date.split(' ')[0] +\n\t\t\t\t  (round.roundData ? ' - ' + round.roundData['course_name'] : '')\n\t\t\t\t: ''}\n\t\t</DialogTitle>\n\t\t<DialogContent>\n\t\t\t<SelectedRoundTable />\n\t\t</DialogContent>\n\t\t<DialogActions>\n\t\t\t<Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tstyle={{ marginTop: '10px' }}\n\t\t\t\tonClick={(event) => hideRoundDialog()}\n\t\t\t>\n\t\t\t\tclose\n\t\t\t</Button>\n\t\t</DialogActions>\n\t</Dialog>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tshowRoundDialog: state.rounds.showRoundDialog,\n\tround: state.rounds.data[state.rounds.selectedRoundIndex]\n});\n\nconst mapDispatchToProps = (\n\tdispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n\thideRoundDialog: () => dispatch(hideRoundDialog())\n});\n\nexport const SelectedRound = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(SelectedRoundComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Table from '@material-ui/core/Table';\n\nimport { AppStateType } from '../../../store/types';\n\nimport { RoundsHeader } from './RoundsHeader';\nimport { RoundsList } from './RoundsList';\n\nimport { SelectedRound } from './SelectedRound';\n\ninterface PropTypes {\n\troundsLoaded: boolean;\n}\n\nexport const RoundsComponent: React.FC<PropTypes> = ({ roundsLoaded }) => (\n\t<div style={{ marginTop: '40px', marginBottom: '50px' }}>\n\t\t<h2>rounds</h2>\n\t\t{!roundsLoaded ? (\n\t\t\t<div style={{ padding: '10px' }}>\n\t\t\t\t<h5>loading rounds...</h5>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<Table padding=\"dense\" style={{ marginTop: '-10px' }}>\n\t\t\t\t<RoundsHeader />\n\t\t\t\t<RoundsList />\n\t\t\t</Table>\n\t\t)}\n\t\t<SelectedRound />\n\t</div>\n);\n\nconst mapStateToProps = (state: AppStateType) => ({\n\troundsLoaded: state.rounds.roundsLoaded\n});\n\nexport const Rounds = connect(mapStateToProps)(RoundsComponent);\n","export const styles = {\n\tseasonHeaderCell: {\n\t\tminWidth: '60px',\n\t\tmaxWidth: '60px',\n\t\tpadding: '8px'\n\t},\n\theaderCell: { padding: '8px' },\n\tseasonCell: {\n\t\tminWidth: '60px',\n\t\tmaxWidth: '60px',\n\t\tpadding: '8px',\n\t\tcursor: 'pointer'\n\t},\n\tselectedSeasonCell: {\n\t\tminWidth: '60px',\n\t\tmaxWidth: '60px',\n\t\tpadding: '8px',\n\t\tbackgroundColor: '#f4faf4',\n\t\tcursor: 'pointer'\n\t},\n\tselectedCell: {\n\t\tminWidth: '40px',\n\t\tmaxWidth: '40px',\n\t\tpadding: '8px',\n\t\tcursor: 'pointer',\n\t\tbackgroundColor: '#f4faf4'\n\t},\n\tregularCell: {\n\t\tminWidth: '40px',\n\t\tmaxWidth: '40px',\n\t\tpadding: '8px',\n\t\tcursor: 'pointer'\n\t}\n};\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { styles } from './styles';\n\ninterface PropTypes {\n\tseasons: Array<number>;\n\tselectedSeason: number;\n\tonClick: Function;\n}\n\nconst stats: Array<string> = [\n\t'score',\n\t'putts',\n\t'greens',\n\t'handicap',\n\t'par 3',\n\t'par 4',\n\t'par 5'\n];\n\nexport const StatsHeader: React.FC<PropTypes> = ({\n\tseasons,\n\tselectedSeason,\n\tonClick\n}) => (\n\t<TableHead>\n\t\t<TableRow>\n\t\t\t{/* <TableCell>season:</TableCell>\n      {seasons.map(season => (\n        <TableCell\n          align=\"right\"\n          key={season}\n          onClick={() => onClick(season)}\n          style={\n            // selectedSeason === season ? styles.selectedCell : styles.regularCell\n            styles.regularCell\n          }\n        >\n          {season === 2046 ? 'overall' : season}\n        </TableCell>\n      ))} */}\n\t\t\t<TableCell style={styles.seasonHeaderCell}>season</TableCell>\n\t\t\t{stats.map((stat) => (\n\t\t\t\t<TableCell align=\"right\" key={stat} style={styles.headerCell}>\n\t\t\t\t\t{stat}\n\t\t\t\t</TableCell>\n\t\t\t))}\n\t\t</TableRow>\n\t</TableHead>\n);\n","import React from 'react';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { StatsType } from '../../../store/stats/types';\n\nimport { styles } from './styles';\n\n// type StatKeysType = { [stat: string]: string };\n\n// const statKeys: StatKeysType = {\n//   strokes: 'scoring average',\n//   putts: 'putts per round',\n//   gir: 'greens per round',\n//   handicap: 'handicap',\n//   par3: 'par 3 average',\n//   par4: 'par 4 average',\n//   par5: 'par 5 average'\n// };\n\nconst statKeys: Array<string> = [\n\t'strokes',\n\t'putts',\n\t'gir',\n\t'handicap',\n\t'par3',\n\t'par4',\n\t'par5'\n];\n\ninterface PropTypes {\n\tseasons: Array<number>;\n\tstats: StatsType;\n\tselectedSeason: number;\n\tonClick: Function;\n}\n\nexport const StatsList: React.FC<PropTypes> = ({\n\tseasons,\n\tstats,\n\tselectedSeason,\n\tonClick\n}) => (\n\t// <TableBody>\n\t//   {Object.keys(statKeys).map(stat => (\n\t//     <TableRow key={stat}>\n\t//       <TableCell>{statKeys[stat]}:</TableCell>\n\t//       {seasons.map(season => (\n\t//         <TableCell\n\t//           align=\"right\"\n\t//           key={season + '-' + stat}\n\t//           onClick={() => onClick(season)}\n\t//           style={\n\t//             selectedSeason === season\n\t//               ? styles.selectedCell\n\t//               : styles.regularCell\n\t//           }\n\t//         >\n\t//           {stats[season][stat]}\n\t//         </TableCell>\n\t//       ))}\n\t//     </TableRow>\n\t//   ))}\n\t// </TableBody>\n\t<TableBody>\n\t\t{seasons.map((season: number) => (\n\t\t\t<TableRow key={season} onClick={() => onClick(season)} hover>\n\t\t\t\t<TableCell\n\t\t\t\t\tstyle={\n\t\t\t\t\t\tselectedSeason === season\n\t\t\t\t\t\t\t? styles.selectedSeasonCell\n\t\t\t\t\t\t\t: styles.seasonCell\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{season === 2046 ? 'overall' : season}\n\t\t\t\t</TableCell>\n\t\t\t\t{statKeys.map((stat: string) => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\talign=\"right\"\n\t\t\t\t\t\tkey={season + '-' + stat}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\tselectedSeason === season\n\t\t\t\t\t\t\t\t? styles.selectedCell\n\t\t\t\t\t\t\t\t: styles.regularCell\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{stats[season][stat]}\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t</TableRow>\n\t\t))}\n\t</TableBody>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport Table from '@material-ui/core/Table';\n\nimport { selectSeason } from '../../../store/stats/actions';\n\nimport { AppStateType } from '../../../store/types';\nimport { StatsType } from '../../../store/stats/types';\n\nimport { StatsHeader } from './StatsHeader';\nimport { StatsList } from './StatsList';\n\ninterface PropTypes {\n\tstatsLoaded: boolean;\n\tstats: StatsType;\n\tselectedSeason: number;\n\tselectSeason: Function;\n}\n\nconst StatsComponent: React.FC<PropTypes> = ({\n\tstatsLoaded,\n\tstats,\n\tselectedSeason,\n\tselectSeason\n}) => {\n\tconst seasons = Object.keys(stats)\n\t\t.map((s) => parseInt(s))\n\t\t.sort()\n\t\t.reverse();\n\n\treturn (\n\t\t<div style={{ marginTop: '20px' }}>\n\t\t\t<h2>statistics</h2>\n\t\t\t{!statsLoaded ? (\n\t\t\t\t<div style={{ padding: '10px' }}>\n\t\t\t\t\t<h5>loading stats...</h5>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<Table style={{ marginTop: '-10px' }}>\n\t\t\t\t\t<StatsHeader\n\t\t\t\t\t\tseasons={seasons}\n\t\t\t\t\t\tselectedSeason={selectedSeason}\n\t\t\t\t\t\tonClick={selectSeason}\n\t\t\t\t\t/>\n\t\t\t\t\t<StatsList\n\t\t\t\t\t\tseasons={seasons}\n\t\t\t\t\t\tstats={stats}\n\t\t\t\t\t\tselectedSeason={selectedSeason}\n\t\t\t\t\t\tonClick={selectSeason}\n\t\t\t\t\t/>\n\t\t\t\t</Table>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tstatsLoaded: state.stats.statsLoaded,\n\tstats: state.stats.data,\n\tselectedSeason: state.stats.selectedSeason\n});\n\nconst mapDispatchToProps = (\n\tdispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n\tselectSeason: (season: number) => dispatch(selectSeason(season))\n});\n\nexport const Stats = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(StatsComponent);\n","import { AnyAction, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AppStateType } from '../types';\nimport { checkToken } from '../auth/actions';\nimport { getData } from '../../utils/httpFunctions';\n\nexport const addStats: ActionCreator<ThunkAction<\n\tvoid,\n\tAppStateType,\n\tnull,\n\tAnyAction\n>> = () => (dispatch, getState) =>\n\tgetData('/api/user/stats', getState().auth.token)\n\t\t.then((response) => response.data)\n\t\t.then((data) => dispatch({ type: 'ADD_STATS', data }))\n\t\t.catch(() => {\n\t\t\tconsole.log('failed to get stats');\n\t\t\tdispatch(checkToken());\n\t\t});\n\nexport const selectSeason: ActionCreator<AnyAction> = (season: string) => ({\n\ttype: 'SELECT_SEASON',\n\tseason\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { addRounds } from '../../store/rounds/actions';\nimport { addStats } from '../../store/stats/actions';\n\nimport { AppStateType } from '../../store/types';\nimport { StatsType } from '../../store/stats/types';\nimport { RoundsType } from '../../store/rounds/types';\n\nimport { Rounds } from './Rounds';\nimport { Stats } from './Stats';\n\nconst styles = {\n\tmainContainer: {\n\t\tmaxWidth: '720px',\n\t\tminWidth: '480px',\n\t\tmargin: 'auto'\n\t},\n\theaderRow: {\n\t\tmarginTop: '20px'\n\t\t// display: 'flex',\n\t\t// justifyContent: 'center'\n\t}\n};\n\ninterface PropTypes {\n\tusername: string;\n\tstats: StatsType;\n\trounds: RoundsType;\n\taddStats: Function;\n\taddRounds: Function;\n}\n\nclass MainComponent extends React.Component<PropTypes> {\n\tcomponentDidMount = () => {\n\t\tif (!this.props.stats[2046]) {\n\t\t\tconsole.log('getting stats');\n\t\t\tthis.props.addStats();\n\t\t}\n\t\tif (!this.props.rounds[0]) {\n\t\t\tconsole.log('getting rounds');\n\t\t\tthis.props.addRounds();\n\t\t}\n\t};\n\n\trender = () => (\n\t\t<div style={styles.mainContainer}>\n\t\t\t<div style={styles.headerRow}>\n\t\t\t\t<h1>hello {this.props.username}</h1>\n\t\t\t</div>\n\t\t\t<Stats />\n\t\t\t<Rounds />\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tusername: state.auth.username,\n\trounds: state.rounds.data,\n\tstats: state.stats.data\n});\n\nconst mapDispatchToProps = (\n\tdispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n\taddRounds: () => dispatch(addRounds()),\n\taddStats: () => dispatch(addStats())\n});\n\nexport const Main = connect(mapStateToProps, mapDispatchToProps)(MainComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { checkToken } from './store/auth/actions';\n\nimport { AppStateType } from './store/types';\n// import { Token } from './types/auth';\n\nimport { Login } from './screens/Login';\nimport { Main } from './screens/Main';\n\ntype PropTypes = {\n\ttoken: string;\n\tisAuthenticated: boolean;\n\tauthenticationFailed: boolean;\n\tcheckToken: Function;\n};\n\nconst AppComponent: React.FC<PropTypes> = ({\n\ttoken,\n\tisAuthenticated,\n\tauthenticationFailed,\n\tcheckToken\n}) => {\n\tif (token && isAuthenticated) {\n\t\treturn <Main />;\n\t} else if (!token || authenticationFailed) {\n\t\treturn <Login />;\n\t} else {\n\t\tcheckToken();\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>authenticating...</p>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nconst mapStateToProps = (state: AppStateType) => ({\n\ttoken: state.auth.token,\n\tisAuthenticated: state.auth.isAuthenticated,\n\tauthenticationFailed: state.auth.authenticationFailed\n});\n\nconst mapDispatchToProps = (\n\tdispatch: ThunkDispatch<AppStateType, null, AnyAction>\n) => ({\n\tcheckToken: () => dispatch(checkToken())\n});\n\nexport const App = connect(mapStateToProps, mapDispatchToProps)(AppComponent);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ReduxProvider } from './store';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n\t<ReduxProvider>\n\t\t<App />\n\t</ReduxProvider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}